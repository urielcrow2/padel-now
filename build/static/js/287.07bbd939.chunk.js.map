{"version":3,"file":"static/js/287.07bbd939.chunk.js","mappings":"uKAGaA,EAAgB,SAACC,GAK1B,IAHA,IAAIC,GAAQ,EAGZ,MAFaC,OAAOC,KAAKH,GAEzB,eAAuB,CAAnB,IAAMI,EAAI,KACV,GAAGC,EAAeD,EAAKJ,EAAKI,IAAO,CAC/BH,GAAQ,EACR,OAGR,OAAOA,GAGEI,EAAiB,SAACD,EAAKE,GAChC,OAAOF,GACH,IAAK,OACD,OAAOG,EAAiBH,EAAKE,GACjC,IAAK,QACD,OAAOE,EAAcF,GACzB,IAAK,SACD,OAAOG,EAAoBH,GAC/B,IAAK,OACD,OAAOI,EAAiBN,EAAKE,GAAM,GACvC,IAAK,SACD,OAAOI,EAAiBN,EAAKE,GAAM,GACvC,QACI,OAAO,IAIbC,EAAmB,SAACH,EAAKE,GAC3B,GAAoB,KAAjBA,EAAMK,SAAkBL,EAAMK,OAAOC,UAAU,OAAOC,QAAQ,mBAAoB,IAAIC,MAAM,iBAE3F,OADAC,EAAAA,EAAAA,IAAS,CAACC,MAAM,GAAD,OAAKC,EAAWC,EAAId,IAASA,GAA7B,0DACR,GAITM,EAAmB,SAACN,EAAKE,EAAMa,GAEjC,IAAMC,EAAcd,EAAMK,OAAOC,UAAU,OAAOC,QAAQ,mBAAoB,IAAIC,MAAM,aAExF,OAAIK,IAA8B,KAAjBb,EAAMK,QAAiBS,KACpCL,EAAAA,EAAAA,IAAS,CAACC,MAAM,GAAD,OAAKC,EAAYC,EAAId,IAASA,GAA9B,4DACR,GAGS,KAAjBE,EAAMK,QAAiBS,IACtBL,EAAAA,EAAAA,IAAS,CAACC,MAAM,GAAD,OAAKC,EAAYC,EAAId,IAASA,GAA9B,2CACR,QAFX,GAOEI,EAAgB,SAACF,GACnB,GAAqB,KAAjBA,EAAMK,SAAkBL,EAAMK,OAAOG,MAAM,uHAE3C,OADAC,EAAAA,EAAAA,IAAS,CAACC,MAAO,6CACV,GAITP,EAAsB,SAACH,GACzB,GAAa,KAAVA,IAAiBA,EAAMK,OAAOG,MAAM,gBAEnC,OADAC,EAAAA,EAAAA,IAAS,CAACC,MAAO,8BACV,GAITE,EAAM,CACR,KAAS,SACT,KAAS,kBACT,OAAW,gBAGTD,EAAa,SAAAb,GAAI,OAAIA,EAAK,GAAGiB,cAAgBjB,EAAKkB,UAAU,K,4HCxErDC,EAAuB,SAACC,GAEjC,OAAwBC,EAAAA,EAAAA,UAAS,CAC7BC,MAAK,EACLC,SAAS,GACTC,QAAQ,IACRC,SAAS,KAJb,eAAOC,EAAP,KAAaC,EAAb,KAOMC,GAAUC,EAAAA,EAAAA,cAAW,iBAAC,6FAGxBF,GAAQ,SAAAD,GAAI,yBACLA,GADK,IAERJ,MAAK,OALe,mBAUHQ,EAAAA,EAAAA,GAAe,CAAEC,SAAQ,6BAAyBX,KAV/C,OAUhBM,EAVgB,OAYhBF,EAAU,IACXE,EAAKM,MAAMC,OAAS,IACnBT,EAAUE,EAAKM,MAAMN,EAAKM,MAAMC,OAAO,GAAGC,iBAG9CC,QAAQC,IAAIV,GAEZC,EAAQ,CACJL,MAAK,EACLC,SAASG,EAAKM,MACdR,QAAAA,EACAC,SAASC,EAAKD,WAvBE,kDA2BpBE,EAAQ,CACJL,MAAK,EACLC,SAAS,GACTC,QAAQ,IACRC,SAAS,KA/BO,0DAkC1B,CAACL,IAaH,OATAiB,EAAAA,EAAAA,YAAU,WAEI,IAAPjB,GAGHQ,MAEF,CAACA,IAEG,CACFF,KAAAA,K,6GC3DKY,EAA4B,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,OAM7C,OAJAH,EAAAA,EAAAA,YAAU,cAER,CAACG,KAGC,gBAAKC,UAAU,iBAAf,SAEIF,EAAMjB,MAEN,SAAC,IAAD,IAEAiB,EAAMG,KAAKC,KAAI,SAAAC,GAEX,OAAGA,EAAKxB,KAAOyB,SAASL,IAAuB,IAAZI,EAAKxB,IAEhC,iBAAmBqB,UAAU,MAA7B,WACI,gBAAKA,UAAU,sCAAf,UACI,wBAAKG,EAAK5C,UAEd,gBAAKyC,UAAU,sCAAf,UACI,gBACIK,MAAO,CAACC,MAAM,IAAIC,aAAa,GAAGC,UAAW,uCAC7CC,IAAI,OACJC,IAAKP,EAAKQ,SAGlB,gBAAKX,UAAU,sCAAf,UACI,wBAAKG,EAAKS,aAZRT,EAAKxB,KAgBhB,mBAAWwB,EAAKxB,UAO1BkC,GAAsBC,EAAAA,EAAAA,OAAK,YAAwC,IAAtChB,EAAqC,EAArCA,MAAMiB,EAA+B,EAA/BA,aAA+B,IAAlBC,OAAAA,OAAkB,SAE3E,OACI,gBAAKhB,UAAU,MAAf,UAEI,iBAAKA,UAAU,SAASK,MAAO,CAACY,SAAS,YAAzC,WACI,iBAAMZ,MAAO,CAACY,SAAS,WAAWC,KAAK,GAAGC,KAAK,GAAGC,WAAW,OAAOC,QAAS,SAASC,MAAM,QAA5F,iCACA,gBAAKtB,UAAU,iCAAf,UAGmB,IAAXgB,GACA,mBACIhB,UAAU,8BACVuB,SAAUR,EACVS,SAAU1B,EAAMjB,KAChBpB,MAAOuD,EAJX,SAOQlB,EAAMjB,MACN,mBAAQpB,MAAM,IAAd,yBACAqC,EAAMG,KAAKC,KAAI,SAAAC,GAAI,OACf,mBAAQ1C,MAAO0C,EAAKxB,GAApB,SAAwCwB,EAAK5C,MAAhB4C,EAAKxB,UAO9C,mBACIqB,UAAU,8BACVuB,SAAUR,EACVS,SAAU1B,EAAMjB,KAHpB,SAMQiB,EAAMjB,MACN,mBAAQpB,MAAM,IAAd,yBACAqC,EAAMG,KAAKC,KAAI,SAAAC,GAAI,OACf,mBAAQ1C,MAAO0C,EAAKxB,GAApB,SAAwCwB,EAAK5C,MAAhB4C,EAAKxB,oB,yJC1EzD8C,EAA8B,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,kBAAkBC,EAAuC,EAAvCA,qBAAqB7B,EAAkB,EAAlBA,MAAM8B,EAAY,EAAZA,SAEhFC,GAAaC,EAAAA,EAAAA,QAAO,IAgDpBC,EAAW,mCAAG,WAAMC,EAAOC,GAAb,8EAEVC,EAAO,CACTC,WAAWH,EACXI,YAAYH,IAGhBI,EAAAA,EAAAA,IAAS,CAACC,KAAK,cAPC,mBASNjD,EAAAA,EAAAA,GAAc,CAChBC,SAAW,qBACXiD,OAAQ,MACRL,KAAAA,EACAM,MAAK,IAbG,OAeZC,OAAOC,SAASC,QAAO,GAfX,iDAkBZzE,EAAAA,EAAAA,IAAS,CACL0E,KAAM,QACNzE,MAAO,mBACP0E,KAAK,qEArBG,yDAAH,wDA0BjB,OACI,UAAC,IAAD,CAAOC,MAAOpB,EAAmBqB,SAAUpB,EAAsBqB,SAzEpD,WAEb,IAAMC,EAAQ5F,OAAOC,KAAKuE,EAAWqB,SACrC,GAAGD,EAAMzD,OAAS,EAAE,CAChB,IAAI2D,EAAW,GACXC,EAAY,GAChBH,EAAMI,SAAQ,SAAAC,GACPzB,EAAWqB,QAAQI,GAClBH,EAASI,KAAKD,GAEdF,EAAUG,KAAKD,MAEvBvB,EAAYoB,EAASC,KA6DzB,WACI,gBAAKpD,UAAU,oBAAf,UACI,eAAIA,UAAU,cAAd,iCAIAF,EAAM0D,MAAMtD,KAAI,SAAAC,GACZ,OACI,4BACI,yBACKA,EAAK5C,QAEV,iBAAKyC,UAAU,iCAAf,WACI,gBAAKU,IAAKP,EAAKQ,IAAKL,MAAM,SAC1B,SAAC,IAAD,CACImD,KAAMtD,EAAKuD,UACXC,MAAO,kBAxElB,SAAChF,EAAGiF,GACrB,IAAIzF,EAAM0E,EAEPe,GACCzF,EAAM,uCACN0E,EAAK,8FAGL1E,EAAM,qCACN0E,EAAK,kIAGTgB,EAAAA,EAAAA,IAAa1F,EAAM0E,GAAK,SAACiB,GAClBA,EAAKC,cACJlC,EAAWqB,QAAQvE,IAAOiF,EAE1BhC,GAAS,kBACF9B,GADC,IAEJ0D,MAAM1D,EAAM0D,MAAMtD,KAAI,SAAAC,GAIlB,OAHGA,EAAKxB,KAAOA,IACXwB,EAAKuD,WAAaE,GAEfzD,YAkDgB6D,CAAa7D,EAAKxB,GAAGwB,EAAKuD,kBAG7C,0BACI,cAAGrD,MAAO,CAAC4D,SAAS,IAApB,SAA0B9D,EAAKS,YAGnC,oBAfMT,EAAKxB,Y,gJCtF1BuF,EAAkB,SAACvF,GAE5B,OAA0BC,EAAAA,EAAAA,UAAS,CAC/BC,MAAK,EACLoB,KAAK,GACLuD,MAAM,GACNW,KAAK,KAJT,eAAOrE,EAAP,KAAc8B,EAAd,KAQA,GAA0BhD,EAAAA,EAAAA,UAAS,GAAnC,eAAMmB,EAAN,KAAaqE,EAAb,KAEMC,GAAYvC,EAAAA,EAAAA,SAAO,GAEnBwC,GAAelF,EAAAA,EAAAA,cAAW,iBAAC,8GAGRC,EAAAA,EAAAA,GAAe,CAAEC,SAAQ,gBAHjB,UAGrBwE,EAHqB,OAKrBO,EAAUnB,QALW,iDAQrBxD,QAAQC,IAAImE,GAEhBlC,EAAS,CACL/C,MAAK,EACLoB,KAAK,CACD,CACItB,GAAG,EACHpB,KAAK,qBACLoD,IAAI,GACJ4D,OAAO,GACPC,MAAM,KANV,eAQGV,EAAKhE,QAEZ0D,MAAMM,EAAKW,OACXN,MAAK,kBACEL,EAAKK,MADR,IAEAI,QAAQG,EAAAA,EAAAA,IAAQZ,EAAKK,KAAKI,OAAO,IAAI,OAzBpB,kDA8BzB3C,EAAS,CACL/C,MAAK,EACLoB,KAAK,GACLkE,KAAK,KAjCgB,0DAoC/B,CAACxF,IAkBH,OAVAiB,EAAAA,EAAAA,YAAU,WACN0E,MACF,CAACA,KAEH1E,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHyE,EAAUnB,SAAU,KAE1B,IAEI,CACFpD,MAAAA,EACAiB,aAlBgB,SAAC4D,GACe,IAA7BvE,SAASuE,EAAEC,OAAOnH,QAErB2G,EAAUO,EAAEC,OAAOnH,QAgBnBsC,OAAAA,EACA6B,SAAAA,K,4KCvEKiD,EAAa,SAAC,GAKtB,IAJDtH,EAIA,EAJAA,KACAuH,EAGA,EAHAA,MACAP,EAEA,EAFAA,OACAQ,EACA,EADAA,SAEA,GAAsBnG,EAAAA,EAAAA,UAAS,CAC3BrB,KAAAA,EACAuH,MAAAA,EACAP,OAAAA,EACAQ,SAAAA,IAJJ,eAAO5H,EAAP,KAAY6H,EAAZ,KAOA,GAAoCpG,EAAAA,EAAAA,UAAS,CACzCrB,KAAAA,EACAuH,MAAAA,EACAP,OAAAA,EACAQ,SAAAA,IAJJ,eAAOE,EAAP,KAAmBC,EAAnB,KAOA,GAA2CtG,EAAAA,EAAAA,WAAS,GAApD,eAAOuG,EAAP,KAAsBC,EAAtB,KAGMC,EAAU,mCAAG,yFAGfD,GAAmBD,IAEhBA,EALY,uBAOXD,GAAe,UACR/H,IARI,+BAaRD,EAAAA,EAAAA,GAAcC,GAbN,uBAeP6H,GAAQ,UACDC,IAhBA,6BAuBXK,GAAe,EAEnBjI,OAAOC,KAAKH,GAAMkG,SAAQ,SAAAkC,GACnBpI,EAAKoI,KAAWN,EAAYM,KAC3BD,GAAe,MAInBA,EA/BW,wBAgCX5F,QAAQC,IAAI,mBAhCD,kCAoCTuC,EAAO,CACT3E,KAAOJ,EAAKI,KACZuH,MAAQ3H,EAAK2H,MACbC,SAAW5H,EAAK4H,SAChBR,OAASpH,EAAKoH,OAAOvG,QAAQ,OAAO,MAGxCqE,EAAAA,EAAAA,IAAS,CAACC,KAAK,uBA3CA,qBA+CQjD,EAAAA,EAAAA,GAAc,CAC7BC,SAAW,eACXiD,OAAQ,QACRL,KAAAA,EACAM,MAAK,IAnDE,eAsDHjF,OACJiI,EAAAA,EAAAA,IAAU,CAAE5C,KAAM,UAAUzE,MAAM,4CAvD3B,oDA0DXD,EAAAA,EAAAA,IAAS,CACL0E,KAAM,QACNzE,MAAO,mBACP0E,KAAK,qEA7DE,2DAAH,qDAmEV4C,EAAiB,SAACd,GACpB,IAAIlH,EAAQ,GAGRA,EADiB,WAAlBkH,EAAEC,OAAOrH,MACAmI,EAAAA,EAAAA,IAAUf,EAAEC,OAAOnH,OAEnBkH,EAAEC,OAAOnH,MAErBuH,GAAQ,kBACD7H,GADA,cAEFwH,EAAEC,OAAOrH,KAAME,MAIxB,OACI,iCACI,iBAAKuC,UAAU,0CAAf,WACI,iBAAMK,MAAO,CAACY,SAAS,WAAWC,KAAK,GAAGC,KAAK,GAAGC,WAAW,OAAOC,QAAS,SAASC,MAAM,QAA5F,qBACA,iBAAMjB,MAAO,CAACY,SAAS,WAAWC,KAAK,GAAGyE,MAAM,GAAGrE,MAAM,WAAzD,UAAqE,cAAGtB,UAAU,oBAAoB,cAAY,YAClH,kBAAO4F,KAAK,OAAOnI,MAAON,EAAKI,KAAMiE,SAAU2D,EAAgB5D,SAAUkE,EAAgBlI,KAAK,OAAOyC,UAAU,oCAEnH,iBAAKA,UAAU,0CAAf,WACI,iBAAMK,MAAO,CAACY,SAAS,WAAWC,KAAK,GAAGC,KAAK,GAAGC,WAAW,OAAOC,QAAS,SAASC,MAAM,QAA5F,oBACA,kBAAOsE,KAAK,OAAOnI,MAAON,EAAK2H,MAAQ3H,EAAK2H,MAAQ,GAAItD,SAAU2D,EAAgB5D,SAAUkE,EAAgBlI,KAAK,QAAQyC,UAAU,oCAEvI,iBAAKA,UAAU,0CAAf,WACI,iBAAMK,MAAO,CAACY,SAAS,WAAWC,KAAK,GAAGC,KAAK,GAAGC,WAAW,OAAOC,QAAS,SAASC,MAAM,QAA5F,0BACA,kBAAOsE,KAAK,OAAOnI,MAAON,EAAKoH,OAASpH,EAAKoH,OAAS,GAAI/C,SAAU2D,EAAgB5D,SAAUkE,EAAgBlI,KAAK,SAASyC,UAAU,oCAE1I,iBAAKA,UAAU,kCAAf,WACI,iBAAMK,MAAO,CAACY,SAAS,WAAWC,KAAK,GAAGC,KAAK,GAAGC,WAAW,OAAOC,QAAS,SAASC,MAAM,QAA5F,+BACA,kBAAOsE,KAAK,OAAOnI,MAAON,EAAK4H,SAAW5H,EAAK4H,SAAW,GAAIvD,SAAU2D,EAAgB5D,SAAUkE,EAAgBlI,KAAK,WAAWyC,UAAU,qBAEhJ,gBAAKA,UAAU,kDAAf,UACI,oBAAQ4F,KAAK,SAAS5F,UAAU,0BAA0B6F,QAASR,EAAYhF,MAAO,CAACG,UAAW,sCAAsCsF,OAAO,IAA/I,cAAuJX,EAAiB,aAAe,oB,sIC9H1LY,EAAwB,SAACpH,GAElC,OAAwBC,EAAAA,EAAAA,UAAS,CAC7BC,MAAK,EACLoB,KAAK,KAFT,eAAOhB,EAAP,KAAaC,EAAb,KAKMC,GAAUC,EAAAA,EAAAA,cAAW,iBAAC,8GAGHC,EAAAA,EAAAA,GAAe,CAAEC,SAAQ,4BAAwBX,KAH9C,OAGhBM,EAHgB,OAKpBS,QAAQC,IAAIV,GAEZC,EAAQ,CACJL,MAAK,EACLoB,KAAK,CACD,CACItB,GAAG,EACHpB,KAAK,yBAHT,eAKG0B,MAdS,gDAoBpBC,EAAQ,CACJL,MAAK,EACLoB,KAAK,KAtBW,yDAyB1B,CAACtB,IAkBH,OAdAiB,EAAAA,EAAAA,YAAU,WAEI,IAAPjB,IAGHO,GAAQ,SAAAD,GAAI,yBACLA,GADK,IAERJ,MAAK,OAGTM,OAEF,CAACA,IAEG,CACF6G,gBAAgB/G,K,qFCnDXgH,EAAc,SAAC,GAAiB,IAAD,IAAdC,MAAAA,OAAc,MAAR,IAAQ,EAExC,EAA4CC,EAAAA,SAAe,GAA3D,eAAOC,EAAP,KAAuBC,EAAvB,KAmBA,OAbAF,EAAAA,WAAgB,WAEZ,SAASG,IACLD,EAAkB5D,OAAO8D,aAM7B,OAHA9D,OAAO+D,iBAAiB,SAAUF,GAClCA,IAEO,kBAAM7D,OAAOgE,oBAAoB,SAAUH,MAEnD,CAACF,IAGAA,EAAiBF,GAEb,mBAAQN,KAAK,SAAS5F,UAAU,kBAAkB6F,QApB5C,WACVpD,OAAOiE,SAAS,CAACxF,IAAK,EAAGyF,SAAU,YAmB/B,UAAkE,cAAG3G,UAAU,wBAAwB7B,MAAM,UAE7G,0B,0EC3BCyI,EAAQ,WACjB,OACI,iBAAK5G,UAAU,wCAAf,WACI,gBAAKA,UAAU,YACf,gBAAKA,UAAU,cAAf,8B,kECHC6G,EAAQ,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,SAAsD,IAA7ChE,MAAAA,OAA6C,SAA/BC,EAA+B,EAA/BA,SAA+B,IAAtBC,SAAAA,OAAsB,MAAX,aAAW,EAOzE,OAEIF,GAIA,gBAAK9C,UAAU,kBAAf,UACI,iBAAKA,UAAU,aAAf,WACI,gBAAKA,UAAU,qBAAf,SACK8G,KAEL,gBAAK9G,UAAU,oBAAf,UACI,gBAAKA,UAAU,kBAAf,UACI,mBAAQ4F,KAAK,SAAS5F,UAAU,8BAA8B6F,QAlB9D,WAChB9C,GAAS,GACTC,KAgBgB,8BAQhB,0B,kEC5BK+D,EAAS,SAAC,GAAgB,IAAftD,EAAc,EAAdA,KAAKE,EAAS,EAATA,MAEzB,OACI,iBAAM3D,UAAS,yBAAoByD,EAAO,UAAY,IAAQoC,QAASlC,EAAvE,UACI,kBAAO3D,UAAU,SAAjB,UACI,iBAAMA,UAAU","sources":["componets/admins/adminValidate.js","componets/perfil/GetListTableUserHook.js","componets/perfil/PerfilClubComponent.js","componets/perfil/PerfilClubsGestionComponent.js","componets/perfil/PerfilClubsHook.js","componets/perfil/PerfilData.js","componets/time/GetListTournamentHook.js","componets/utils/buttonFloat/ButtonFloatComponent.js","componets/utils/load2/Load2.js","componets/utils/modal/Modal.js","componets/utils/switch/Switch.js"],"sourcesContent":["\r\nimport {infoSwal} from '../utils/swalCustome';\r\n\r\nexport const adminValidate = (form)=>{\r\n\r\n    let error = false;\r\n    const temp = Object.keys(form);\r\n\r\n    for(const name of temp){\r\n        if(switchValidate(name,form[name])){\r\n            error = true;\r\n            break;\r\n        }\r\n    }\r\n    return error;\r\n}\r\n\r\nexport const switchValidate = (name,value)=>{\r\n    switch(name){\r\n        case 'name':\r\n            return validateOnlyText(name,value);\r\n        case 'email':\r\n            return validateEmail(value);\r\n        case 'number':\r\n            return validatePhoneNumber(value);\r\n        case 'club':\r\n            return validateFreeText(name,value,true);\r\n        case 'adress':\r\n            return validateFreeText(name,value,false);\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nconst validateOnlyText = (name,value)=>{\r\n    if(value.trim() === \"\" || !value.trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").match(/^[a-zA-Z\\s]+$/)){\r\n        infoSwal({title: `${capitalize(esp[name] || name)} es obligatorio y debe tener solo letras y espacios`});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst validateFreeText = (name,value,required)=>{ \r\n\r\n    const expRegResp = (value.trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").match(/[<>\"\\'&]+/));\r\n\r\n    if( required && (value.trim() === \"\" || expRegResp) ){\r\n        infoSwal({title: `${capitalize( esp[name] || name )} es obligatorio y no debe tener caracteres especiales`});\r\n        return true;\r\n    }\r\n\r\n    if(value.trim() !== \"\" && expRegResp){\r\n        infoSwal({title: `${capitalize( esp[name] || name )} No debe tener caracteres especiales`});\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nconst validateEmail = (value)=>{\r\n    if( value.trim() === \"\" || !value.trim().match(/^([a-zA-Z0-9_\\-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{1,5}|[0-9]{1,3})(\\]?)$/)){\r\n        infoSwal({title: 'E-mail es obligatorio y debe ser valido'});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst validatePhoneNumber = (value)=>{\r\n    if(value !== \"\" && !value.trim().match(/^[0-9-]{14}$/)){\r\n        infoSwal({title: 'Teléfono a 10 digitos'});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst esp = {\r\n    'name' : 'nombre',\r\n    'club' : 'nombre del club',\r\n    'adress' : 'dirección'\r\n}\r\n\r\nconst capitalize = name => name[0].toUpperCase() + name.substring(1);\r\n","import {useState,useCallback,useEffect} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\nimport {addChar} from '../../helpers/miselanius';\r\n\r\n\r\nexport const GetListTableUserHook = (id)=>{\r\n\r\n    const [data, setData] = useState({\r\n        load:true,\r\n        journals:[],\r\n        ranking:\"-\",\r\n        nextGame:{}\r\n    });\r\n  \r\n    const getList = useCallback(async()=>{\r\n\r\n\r\n        setData(data=>({\r\n            ...data,\r\n            load:true,\r\n        }));\r\n\r\n        try{\r\n\r\n            let data = await fetchCustome2( { endpoint : `/tournaments/count/${id}` } );\r\n\r\n            let ranking = \"-\";\r\n            if(data.table.length > 0){\r\n                ranking = data.table[data.table.length-1].positionGeneral;\r\n            }\r\n\r\n            console.log(data);\r\n\r\n            setData({\r\n                load:false,\r\n                journals:data.table,\r\n                ranking,\r\n                nextGame:data.nextGame\r\n            });\r\n        }\r\n        catch(e){\r\n            setData({\r\n                load:false,\r\n                journals:[],\r\n                ranking:\"-\",\r\n                nextGame:{}\r\n            });\r\n        }\r\n    },[id]);\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        if(id === 0)\r\n            return;\r\n\r\n        getList();\r\n\r\n    },[getList]);\r\n\r\n    return{\r\n        data\r\n    }\r\n}","import {useEffect,memo} from 'react';\r\nimport {Load2} from '../utils/load2/Load2';\r\n\r\nexport const PerfilClubComponentCarpet = ({clubs,idClub})=>{\r\n\r\n    useEffect(()=>{\r\n      \r\n    },[idClub])\r\n\r\n    return(\r\n        <div className=\"col-md-12 mt-3\">\r\n         {\r\n            clubs.load ?\r\n\r\n            <Load2 /> :\r\n\r\n            clubs.list.map(club=> {\r\n              \r\n                if(club.id === parseInt(idClub) && club.id !== 0){\r\n                    return (\r\n                        <div key={club.id} className=\"row\">\r\n                            <div className=\"col-md-4 col-xs-12 mt-1 text-center\">\r\n                                <h5>{club.name}</h5>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-xs-12 mt-1 text-center\">\r\n                                <img \r\n                                    style={{width:200,marginBottom:10,boxShadow: \"-3px 3px 10px -2px rgba(0,0,0,0.52)\"}} \r\n                                    alt=\"logo\" \r\n                                    src={club.img} \r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-4 col-xs-12 mt-1 text-center\">\r\n                                <h5>{club.adress}</h5>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                return <span key={club.id}></span>\r\n            })\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const PerfilClubComponent = memo(({clubs,onChangeClub,select = false})=>{\r\n\r\n    return(\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col-12\" style={{position:\"relative\"}}>\r\n                <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Selecciona un club</span>\r\n                <div className=\"d-flex justify-content-between\">\r\n                       \r\n                    {\r\n                        select !== false ?\r\n                        <select \r\n                            className=\"form-control text-uppercase\" \r\n                            onChange={onChangeClub} \r\n                            disabled={clubs.load}\r\n                            value={select}\r\n                        >\r\n                            {\r\n                                clubs.load ?\r\n                                <option value=\"0\">Cargando...</option>:\r\n                                clubs.list.map(club=>(\r\n                                    <option value={club.id} key={club.id} >{club.name}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n\r\n                        :\r\n\r\n                        <select \r\n                            className=\"form-control text-uppercase\" \r\n                            onChange={onChangeClub} \r\n                            disabled={clubs.load}\r\n                        >\r\n                            {\r\n                                clubs.load ?\r\n                                <option value=\"0\">Cargando...</option>:\r\n                                clubs.list.map(club=>(\r\n                                    <option value={club.id} key={club.id} >{club.name}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n\r\n                    }\r\n                   \r\n\r\n                </div>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n})","import {useRef} from 'react';\r\nimport {Modal} from '../utils/modal/Modal';\r\nimport {Switch} from '../utils/switch/Switch';\r\nimport {waitSwal,infoSwal,quetionSwal2} from '../utils/swalCustome';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\nexport const PerfilClubsGestionComponent = ({modalGestionClubs,setModalGestionClubs,clubs,setClubs})=>{\r\n    \r\n    const listChange = useRef({});\r\n    \r\n    const callback = ()=>{\r\n\r\n        const array = Object.keys(listChange.current)\r\n        if(array.length > 0){\r\n            let tempTrue = [];\r\n            let tempFalse = [];\r\n            array.forEach(element =>{\r\n                if(listChange.current[element])\r\n                    tempTrue.push(element);\r\n                else\r\n                    tempFalse.push(element);\r\n            });\r\n            SaveChanges(tempTrue,tempFalse);\r\n        }\r\n       \r\n    }\r\n\r\n    const changeStatus = (id,status)=>{\r\n        let title,text;\r\n\r\n        if(status){\r\n            title=\"Deseas eliminar el club de tu perfil\";\r\n            text=\"Al eliminarlo ya no podrás ver información de los torneos ni nada referente al club\";\r\n        }\r\n        else{\r\n            title=\"Deseas agregar el club a tu perfil\";\r\n            text=\"Al agregarlo podras inscribirte a los torneos que realice el club y tendras los detalles de los torneos en los que participes\";\r\n        }\r\n\r\n        quetionSwal2(title,text,(resp)=>{\r\n            if(resp.isConfirmed){\r\n                listChange.current[id] = !status;\r\n       \r\n                setClubs({\r\n                    ...clubs,\r\n                    list2:clubs.list2.map(club=>{\r\n                        if(club.id === id){\r\n                            club.user_club = !status\r\n                        }\r\n                        return club;\r\n                    })\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const SaveChanges = async(toTrue,toFalse)=>{\r\n    \r\n        const body = {\r\n            listToTrue:toTrue,\r\n            listToFalse:toFalse\r\n        }\r\n\r\n        waitSwal({html:'Espere...'});\r\n        try{\r\n            await fetchCustome2({ \r\n                endpoint : '/clubs/clubs_users',\r\n                method :'PUT',\r\n                body,\r\n                json:true\r\n            });\r\n            window.location.reload(false);\r\n        }\r\n        catch(e){\r\n            infoSwal({\r\n                icon: 'error',\r\n                title: 'Ocurrio un error',\r\n                text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n            });\r\n        } \r\n    }\r\n\r\n    return(\r\n        <Modal modal={modalGestionClubs} setModal={setModalGestionClubs} callback={callback}>\r\n            <div className=\"modal-crow-header\">\r\n                <h4 className=\"text-center\">Clubs disponibles</h4>\r\n            </div>\r\n\r\n            {\r\n                clubs.list2.map(club=>{\r\n                    return(\r\n                        <div key={club.id}>\r\n                            <div>\r\n                                {club.name}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <img src={club.img} width=\"120\"/>\r\n                                <Switch \r\n                                    isOn={club.user_club} \r\n                                    click={()=>changeStatus(club.id,club.user_club)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <p style={{fontSize:10}}>{club.adress}</p>\r\n                            </div>\r\n\r\n                            <hr />\r\n                            \r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </Modal>\r\n    )\r\n}","import {useState,useCallback,useEffect,useRef} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\nimport {addChar} from '../../helpers/miselanius';\r\n\r\n\r\nexport const PerfilClubsHook = (id)=>{\r\n\r\n    const [clubs, setClubs] = useState({\r\n        load:true,\r\n        list:[],\r\n        list2:[],\r\n        user:{}\r\n    });\r\n\r\n\r\n    const[idClub,setIdClub] = useState(0);\r\n\r\n    const isMounted = useRef(true);\r\n  \r\n    const getListClubs = useCallback(async()=>{\r\n\r\n        try{\r\n            let resp = await fetchCustome2( { endpoint : `/clubs/list` } );\r\n\r\n            if(!isMounted.current)\r\n                return;\r\n\r\n                console.log(resp)\r\n\r\n            setClubs({\r\n                load:false,\r\n                list:[\r\n                    {\r\n                        id:0,\r\n                        name:'Selecciona un club',\r\n                        img:'',\r\n                        number:'',\r\n                        email:''\r\n                    },\r\n                    ...resp.clubs\r\n                ],\r\n                list2:resp.clubs2,\r\n                user:{\r\n                    ...resp.user,\r\n                    number: addChar(resp.user.number,'-',2)\r\n                }\r\n            });\r\n        }\r\n        catch(e){\r\n            setClubs({\r\n                load:false,\r\n                list:[],\r\n                user:{}\r\n            });\r\n        }\r\n    },[id]);\r\n\r\n    const onChangeClub= (e)=>{\r\n        if(parseInt(e.target.value) === 0)\r\n            return;\r\n        setIdClub(e.target.value);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getListClubs();\r\n    },[getListClubs]);\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    },[]);\r\n\r\n    return{\r\n        clubs,\r\n        onChangeClub,\r\n        idClub,\r\n        setClubs\r\n    }\r\n}","import {useState,useEffect} from 'react';\r\nimport {maskPhone} from '../../helpers/miselanius';\r\nimport {adminValidate} from '../admins/adminValidate';\r\nimport {waitSwal,mixinSwal,infoSwal} from '../utils/swalCustome';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\nexport const PerfilData = ({\r\n    name,\r\n    alias,\r\n    number,\r\n    birth_at\r\n})=>{\r\n    const [form,setForm] =useState({\r\n        name,\r\n        alias,\r\n        number,\r\n        birth_at\r\n    });\r\n\r\n    const [formPrevius,setFormPrevius] =useState({\r\n        name,\r\n        alias,\r\n        number,\r\n        birth_at\r\n    });\r\n\r\n    const [disabledInputs,setDisabledInputs] = useState(true);\r\n\r\n\r\n    const updateData = async()=>{\r\n        \r\n       \r\n        setDisabledInputs(!disabledInputs);\r\n\r\n        if(disabledInputs){\r\n            //guardo el previuos\r\n            setFormPrevius({\r\n                ...form\r\n            });\r\n            return;\r\n        }\r\n        else{\r\n            if(adminValidate(form)){\r\n                //Restauro datos\r\n                setForm({\r\n                    ...formPrevius\r\n                })\r\n                return;\r\n            }\r\n        }\r\n\r\n        //si no hubo cambios termina el proceso\r\n        let existChanges = false;\r\n\r\n        Object.keys(form).forEach(input=>{\r\n            if(form[input] !== formPrevius[input])\r\n                existChanges = true;\r\n        })\r\n\r\n\r\n        if(!existChanges){\r\n            console.log('No hubo cambios');\r\n            return;\r\n        }\r\n       \r\n        const body = {\r\n            name : form.name,\r\n            alias : form.alias,\r\n            birth_at : form.birth_at,\r\n            number : form.number.replace(/[-]/g,'')\r\n        }\r\n\r\n        waitSwal({html:'Actualizando datos'});\r\n\r\n        try{\r\n\r\n            const resp = await fetchCustome2({ \r\n                endpoint : '/users/count',\r\n                method :'PATCH',\r\n                body,\r\n                json:true\r\n            });\r\n\r\n            if(resp.name)\r\n                mixinSwal({ icon: 'success',title: `Los datos se actualizaron correctamente`});\r\n        }\r\n        catch(e){\r\n            infoSwal({\r\n                icon: 'error',\r\n                title: 'Ocurrio un error',\r\n                text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    const onchangeInputs = (e)=>{\r\n        let value = '';\r\n\r\n        if(e.target.name === 'number')\r\n            value = maskPhone(e.target.value);\r\n        else\r\n            value = e.target.value;\r\n\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]:value\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"col-md-4 position-relative mt-md-0 mt-4\">\r\n                <span style={{position:\"absolute\",top:-21,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Nombre</span>\r\n                <span style={{position:\"absolute\",top:-12,right:25,color:\"#00a65a\"}}><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></span>\r\n                <input type=\"text\" value={form.name} disabled={disabledInputs} onChange={onchangeInputs} name=\"name\" className=\"form-control text-uppercase\" />\r\n            </div>\r\n            <div className=\"col-md-4 position-relative mt-md-0 mt-4\">\r\n                <span style={{position:\"absolute\",top:-21,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Alias</span>\r\n                <input type=\"text\" value={form.alias ? form.alias : ''} disabled={disabledInputs} onChange={onchangeInputs} name=\"alias\" className=\"form-control text-uppercase\" />\r\n            </div>\r\n            <div className=\"col-md-4 position-relative mt-md-0 mt-4\">\r\n                <span style={{position:\"absolute\",top:-21,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Teléfono</span>\r\n                <input type=\"text\" value={form.number ? form.number : ''} disabled={disabledInputs} onChange={onchangeInputs} name=\"number\" className=\"form-control text-lowercase\" />\r\n            </div>\r\n            <div className=\"col-md-4 position-relative mt-4\">\r\n                <span style={{position:\"absolute\",top:-21,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Fecha nacimiento</span>\r\n                <input type=\"date\" value={form.birth_at ? form.birth_at : ''} disabled={disabledInputs} onChange={onchangeInputs} name=\"birth_at\" className=\"form-control\" />\r\n            </div>\r\n            <div className=\"col-md-8 col-12 mt-4 d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={updateData} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\",height:43}}> { disabledInputs ? 'Actualizar' : 'Guardar'}</button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {useState,useCallback,useEffect} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\n\r\nexport const GetListTournamentHook = (id)=>{\r\n\r\n    const [data, setData] = useState({\r\n        load:true,\r\n        list:[]\r\n    });\r\n  \r\n    const getList = useCallback(async()=>{\r\n    \r\n        try{\r\n            let data = await fetchCustome2( { endpoint : `/tournaments/list/${id}`} );\r\n\r\n            console.log(data)\r\n            \r\n            setData({\r\n                load:false,\r\n                list:[\r\n                    {\r\n                        id:0,\r\n                        name:'Selecciona un torneo'\r\n                    },\r\n                    ...data\r\n                ]\r\n                   \r\n            });\r\n        }\r\n        catch(e){\r\n            setData({\r\n                load:false,\r\n                list:[]\r\n            });\r\n        }\r\n    },[id]);\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        if(id === 0)\r\n            return;\r\n\r\n        setData(data=>({\r\n            ...data,\r\n            load:true,\r\n        }));\r\n\r\n        getList();\r\n\r\n    },[getList]);\r\n\r\n    return{\r\n        listTournaments:data\r\n    }\r\n}","import React from 'react';\r\nimport './buttonFloat.css';\r\n\r\n\r\nexport const ButtonFloat = ( {hight=700}) =>{\r\n\r\n    const [scrollPosition, setScrollPosition] = React.useState(0);\r\n   \r\n    const goTop = ()=>{\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    }\r\n\r\n    React.useEffect(() => {//Guardamos la posición del scroll\r\n\r\n        function updatePosition() {\r\n            setScrollPosition(window.pageYOffset);\r\n        }\r\n\r\n        window.addEventListener('scroll', updatePosition);\r\n        updatePosition();\r\n\r\n        return () => window.removeEventListener('scroll', updatePosition);\r\n\r\n    }, [scrollPosition]);\r\n\r\n    return (\r\n        scrollPosition > hight \r\n        ? \r\n            <button type=\"button\" className=\"btn buttonFloat\" onClick={goTop}><i className=\"fas fa-arrow-up fa-2x\" title=\"Up\"></i></button> \r\n        :\r\n            <></>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './load2.css';\r\n\r\nexport const Load2 = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"loader\"></div>\r\n            <div className=\"text-loader\">Cargando...</div>\r\n        </div>\r\n    )\r\n}\r\n","import './modal.css';\r\n\r\n\r\n\r\nexport const Modal = ({children,modal = false,setModal,callback = ()=>{} })=>{\r\n\r\n    const closeWindow = ()=>{\r\n        setModal(false);\r\n        callback();\r\n    }\r\n\r\n    return(\r\n\r\n        modal\r\n\r\n        ?\r\n\r\n        <div className=\"modal-crow-main\">\r\n            <div className=\"modal-crow\">\r\n                <div className=\"modal-crow-contain\">\r\n                    {children}\r\n                </div>\r\n                <div className=\"modal-crow-footer\">\r\n                    <div className=\"modal-align-end\">\r\n                        <button type=\"button\" className=\"btn-modal btn-default-modal\" onClick={closeWindow/*()=>setModal(false)*/}> Salir</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        :\r\n\r\n        <></>\r\n\r\n    );\r\n}","//<Switch isOn={status} click={changeStatus}/>\r\n\r\nimport './Switch.css'\r\n\r\nexport const Switch = ({isOn,click})=>{\r\n    \r\n    return(\r\n        <span className={`slider-custome ${isOn ? 'checked' : '' }`}  onClick={click}>\r\n            <label className=\"switch\">\r\n                <span className=\"slider round\"></span>\r\n            </ label>\r\n        </span>\r\n    )\r\n}"],"names":["adminValidate","form","error","Object","keys","name","switchValidate","value","validateOnlyText","validateEmail","validatePhoneNumber","validateFreeText","trim","normalize","replace","match","infoSwal","title","capitalize","esp","required","expRegResp","toUpperCase","substring","GetListTableUserHook","id","useState","load","journals","ranking","nextGame","data","setData","getList","useCallback","fetchCustome2","endpoint","table","length","positionGeneral","console","log","useEffect","PerfilClubComponentCarpet","clubs","idClub","className","list","map","club","parseInt","style","width","marginBottom","boxShadow","alt","src","img","adress","PerfilClubComponent","memo","onChangeClub","select","position","top","left","background","padding","color","onChange","disabled","PerfilClubsGestionComponent","modalGestionClubs","setModalGestionClubs","setClubs","listChange","useRef","SaveChanges","toTrue","toFalse","body","listToTrue","listToFalse","waitSwal","html","method","json","window","location","reload","icon","text","modal","setModal","callback","array","current","tempTrue","tempFalse","forEach","element","push","list2","isOn","user_club","click","status","quetionSwal2","resp","isConfirmed","changeStatus","fontSize","PerfilClubsHook","user","setIdClub","isMounted","getListClubs","number","email","clubs2","addChar","e","target","PerfilData","alias","birth_at","setForm","formPrevius","setFormPrevius","disabledInputs","setDisabledInputs","updateData","existChanges","input","mixinSwal","onchangeInputs","maskPhone","right","type","onClick","height","GetListTournamentHook","listTournaments","ButtonFloat","hight","React","scrollPosition","setScrollPosition","updatePosition","pageYOffset","addEventListener","removeEventListener","scrollTo","behavior","Load2","Modal","children","Switch"],"sourceRoot":""}