{"version":3,"file":"static/js/118.9982c4f4.chunk.js","mappings":"6OAgJA,UAnI2B,WAEvB,IAAQA,GAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BF,WAGR,GAAoCG,EAAAA,EAAAA,KAA7BC,EAAP,EAAOA,MAAMC,EAAb,EAAaA,aAAaC,EAA1B,EAA0BA,OAEnBC,GAAmBC,EAAAA,EAAAA,GAAsBF,GAAzCC,gBACP,GAAuCE,EAAAA,EAAAA,UAAS,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAiBC,EAAAA,EAAAA,GAAoBH,GAArCE,aACR,GAAyCH,EAAAA,EAAAA,UAAS,IAAlD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAAqCN,EAAAA,EAAAA,UAASO,OAAOC,YAArD,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAYC,EAAAA,EAAAA,SAAO,IAEzBC,EAAAA,EAAAA,YAAU,WACNtB,GAAY,SAAAuB,GAAO,yBACRA,GADQ,IAEXC,UAAY,uBAGtB,CAACxB,KAIHsB,EAAAA,EAAAA,YAAU,WACHF,EAAUK,UACTC,EAAAA,EAAAA,IAAS,CAACC,KAAK,gCACrB,CAACrB,KAEHgB,EAAAA,EAAAA,YAAU,WACHF,EAAUK,UACTG,EAAAA,EAAAA,QACN,CAACrB,EAAgBsB,QAEnBP,EAAAA,EAAAA,YAAU,WACHF,EAAUK,SACTG,EAAAA,EAAAA,MAEAR,EAAUK,SAAU,IAC1B,CAACb,EAAaiB,QAGhBP,EAAAA,EAAAA,YAAU,WACN,IAAMQ,EAAW,kBAAIX,EAAgBH,OAAOC,aAI5C,OAFAD,OAAOe,iBAAiB,SAASD,GAE1B,WACHd,OAAOgB,oBAAoB,SAASF,MAG1C,KAEFR,EAAAA,EAAAA,YAAU,WAEN,IADA,IAAIW,EAAO,GACHC,EAAE,EAAEA,GAAGtB,EAAauB,KAAKC,SAASF,IACtCD,EAAKI,KAAKH,GACdnB,EAAiBkB,KACnB,CAACrB,EAAauB,KAAKC,WAUrB,OACI,gBAAKE,UAAU,eAAf,UACI,gBAAKA,UAAU,qBAAf,UACI,gBAAKA,UAAU,MAAf,UACI,gBAAKA,UAAU,iBAAf,UACI,gBAAKA,UAAU,OAAf,UACI,iBAAKA,UAAW,YAAhB,WAEI,SAAC,IAAD,CAAqBlC,MAAOA,EAAOC,aAAcA,KAEjD,gBAAKiC,UAAU,MAAf,UACI,iBAAKA,UAAU,uBAAuBC,MAAO,CAACC,SAAS,YAAvD,WACI,iBAAMD,MAAO,CAACC,SAAS,WAAWC,KAAK,GAAGC,KAAK,GAAGC,WAAW,OAAOC,QAAS,SAASC,MAAM,QAA5F,mCACA,gBAAKP,UAAU,iCAAf,UACI,mBAAQA,UAAU,mCAAmCQ,SAtBlE,SAACC,GACQ,IAA7BC,SAASD,EAAEE,OAAOC,UAGrBxB,EAAAA,EAAAA,IAAS,CAACC,KAAK,oBACfhB,EAAgBoC,EAAEE,OAAOC,SAiB8FC,SAAU5C,EAAgBsB,KAAMqB,MAAOxC,EAA1H,SAGQH,EAAgBsB,MAEhB,mBAAQqB,MAAM,IAAd,0BAEA3C,EAAgB4B,KAAKiB,KAAI,SAAAC,GAAI,OACzB,mBAAQH,MAAOG,EAAKC,GAApB,SAAwCD,EAAKE,MAAhBF,EAAKC,gBAWtD1C,EAAaiB,MAKb,wBAEAX,EAAc,KAGV,SAAC,IAAD,CAAmBJ,cAAeA,EAAeF,aAAcA,KAI/D,SAAC,IAAD,CAAmBE,cAAeA,EAAeF,aAAcA,KAItE,SAAC,IAAD,CAAa4C,MAAO,qB,0EClIxCC,EAAoB,SAAC,GAAkC,IAAjC3C,EAAgC,EAAhCA,cAAcF,EAAkB,EAAlBA,aAC7C,OACI,gBAAK0B,UAAU,mBAAmBC,MAAO,CAACK,QAAQ,IAAlD,UACI,mBAAON,UAAU,qBAAqBC,MAAO,CAACmB,UAAU,IAAxD,WACI,kBAAOnB,MAAO,CAACI,WAAW,UAAUE,MAAM,OAAOc,OAAO,GAAGC,SAAS,GAAGC,cAAc,SAASC,UAAW,sCAAsCC,aAAa,IAA5J,UACI,2BACI,eAAIC,MAAM,MAAMzB,MAAO,CAAC0B,oBAAoB,IAA5C,0BACA,eAAID,MAAM,MAAMzB,MAAO,CAAC2B,UAAU,UAAlC,sBACA,eAAIF,MAAM,MAAV,oBAGIlD,EAAcsC,KAAK,SAAAe,GAAO,OAAI,gBAAIH,MAAM,MAAV,cAAgCG,IAAXA,OAGvD,eAAIH,MAAM,MAAMzB,MAAO,CAAC6B,qBAAqB,IAA7C,yBAGR,kBAAO7B,MAAO,CAACuB,UAAW,sCAAsCO,uBAAuB,GAAGC,wBAAwB,IAAlH,SAGI1D,EAAauB,KAAKoC,OAElB3D,EAAauB,KAAKoC,MAAMnB,KAAI,SAAAoB,GAAI,OAC5B,gBAAIjC,MAAO,CAACsB,cAAc,UAA1B,WACI,eAAIG,MAAM,MAAMzB,MAAO,CAACkC,YAAa,IAArC,SAA4CD,EAAKhC,YACjD,gBAAID,MAAO,CAAC2B,UAAU,UAAtB,WACI,gBAAK3B,MAAO,CAACmC,MAAM,OAAOC,aAAa,OAAOZ,aAAa,MAAMD,UAAW,uCAAwCc,IAAI,SAASC,IAAKL,EAAKM,OAC3I,mBACA,iBAAMvC,MAAO,CAACqB,SAAS,GAAGmB,YAAY,GAAtC,SAA2CP,EAAKQ,SAChD,kBACCR,EAAKjB,SAEV,yBACI,kBAAMjB,UAAU,kBAAkBC,MAAO,CAACqB,SAAS,GAAGF,UAAU,GAAhE,cAAsEc,EAAKS,MAA3E,SAIAnE,EAAcsC,KAAK,SAAAe,GAAO,OACtB,yBACI,iBAAM5B,MAAO,CAACmC,MAAM,GAAGd,SAAS,GAAGM,UAAU,UAA7C,SACMM,EAAK,UAAUL,MAFhBA,OAOjB,yBACI,iBAAM5B,MAAO,CAACmC,MAAM,GAAGd,SAAS,GAAGM,UAAU,UAA7C,SACKM,EAAKU,qBAxBwBV,EAAKW,qB,0ECvB1DC,EAAoB,SAAC,GAAiC,IAAhCtE,EAA+B,EAA/BA,cAAcF,EAAiB,EAAjBA,aAC7C,OACIA,EAAauB,KAAKoC,OAElB3D,EAAauB,KAAKoC,MAAMnB,KAAI,SAAAoB,GAAI,OAC5B,iBAEIjC,MAAO,CACHI,WAAW,OACXC,QAAQ,GACRmB,aAAa,EACbvB,SAAS,WACTsB,UAAW,sCACXa,aAAa,IARrB,WAYI,iBAAKpC,MAAO,CAACI,WAAW,UAAUC,QAAQ,GAAGC,MAAM,OAAOqB,UAAU,SAApE,WACI,iBAAM3B,MAAO,CAACqB,SAAS,GAAGmB,YAAY,GAAtC,SAA2CP,EAAKQ,SAChD,kBACCR,EAAKjB,SAGV,iBAAKjB,UAAU,iCAAf,WACI,iBAAKA,UAAU,qBAAf,WAAoC,uCAApC,KAAoD,kBAAMA,UAAU,qBAAqBC,MAAO,CAACqB,SAAS,GAAGF,UAAU,GAAnE,cAAyEc,EAAKhC,SAA9E,WACpD,gBAAKD,MAAO,CAACmC,MAAM,OAAOW,OAAO,OAAOtB,aAAa,MAAMD,UAAW,uCAAwCc,IAAI,SAASC,IAAKL,EAAKM,OACrI,iBAAKxC,UAAU,qBAAf,WAAoC,kCAApC,KAAkD,kBAAMA,UAAU,kBAAkBC,MAAO,CAACqB,SAAS,GAAGF,UAAU,GAAhE,cAAsEc,EAAKS,MAA3E,cAGtD,iBAAK3C,UAAU,gCAAf,WACI,sCACA,eAAIC,MAAO,CAACmC,MAAM,WAClB,sCAIA5D,EAAcsC,KAAK,SAAAe,GAAO,OACtB,iBAAK7B,UAAU,MAAf,WACI,gBAAKA,UAAU,oBAAf,SACK6B,KAEL,gBAAK7B,UAAU,iBAAf,SACKkC,EAAK,UAAUL,OALEA,OAWlC,gBAAK7B,UAAU,gCAAf,UACI,eAAIC,MAAO,CAACmC,MAAM,aAGrB,iBAAKpC,UAAU,gDAAf,WACE,mCACA,kBAAMA,UAAU,mBAAmBC,MAAO,CAACqB,SAAS,GAAGF,UAAU,EAAE4B,WAAW,GAA9E,cAAoFd,EAAKU,eAAzF,YAhDEV,EAAKW,c,4HCLbtE,EAAsB,SAACyC,GAEhC,OAAwB7C,EAAAA,EAAAA,UAAS,CAC7BoB,MAAK,EACLM,KAAK,KAFT,eAAOoD,EAAP,KAAaC,EAAb,KAKMC,GAAUC,EAAAA,EAAAA,cAAW,iBAAC,2FACxBC,QAAQC,IAAI,oBAEZJ,GAAQ,SAAAD,GAAI,yBACLA,GADK,IAER1D,MAAK,OALe,mBASHgE,EAAAA,EAAAA,GAAe,CAAEC,SAAQ,6BAAyBxC,KAT/C,OAShBiC,EATgB,OAWpBI,QAAQC,IAAIL,GAEZC,EAAQ,CACJ3D,MAAK,EACLM,KAAKoD,IAfW,kDAqBpBC,EAAQ,CACJ3D,MAAK,EACLM,KAAK,KAvBW,0DA2B1B,CAACmB,IAaH,OATAhC,EAAAA,EAAAA,YAAU,WAEI,IAAPgC,GAGHmC,MAEF,CAACA,IAEG,CACF7E,aAAa2E,K,6GCjDRQ,EAA4B,SAAC,GAAkB,IAAjB3F,EAAgB,EAAhBA,MAAME,EAAU,EAAVA,OAM7C,OAJAgB,EAAAA,EAAAA,YAAU,cAER,CAAChB,KAGC,gBAAKgC,UAAU,iBAAf,SAEIlC,EAAMyB,MAEN,SAAC,IAAD,IAEAzB,EAAM+B,KAAKiB,KAAI,SAAA4C,GAEX,OAAGA,EAAK1C,KAAON,SAAS1C,IAAuB,IAAZ0F,EAAK1C,IAEhC,iBAAmBhB,UAAU,MAA7B,WACI,gBAAKA,UAAU,sCAAf,UACI,wBAAK0D,EAAKzC,UAEd,gBAAKjB,UAAU,sCAAf,UACI,gBACIC,MAAO,CAACmC,MAAM,IAAIC,aAAa,GAAGb,UAAW,uCAC7Cc,IAAI,OACJC,IAAKmB,EAAKlB,SAGlB,gBAAKxC,UAAU,sCAAf,UACI,wBAAK0D,EAAKC,aAZRD,EAAK1C,KAgBhB,mBAAW0C,EAAK1C,UAO1B4C,GAAsBC,EAAAA,EAAAA,OAAK,YAAwC,IAAtC/F,EAAqC,EAArCA,MAAMC,EAA+B,EAA/BA,aAA+B,IAAlB+F,OAAAA,OAAkB,SAE3E,OACI,gBAAK9D,UAAU,MAAf,UAEI,iBAAKA,UAAU,SAASC,MAAO,CAACC,SAAS,YAAzC,WACI,iBAAMD,MAAO,CAACC,SAAS,WAAWC,KAAK,GAAGC,KAAK,GAAGC,WAAW,OAAOC,QAAS,SAASC,MAAM,QAA5F,iCACA,gBAAKP,UAAU,iCAAf,UAGmB,IAAX8D,GACA,mBACI9D,UAAU,8BACVQ,SAAUzC,EACV8C,SAAU/C,EAAMyB,KAChBqB,MAAOkD,EAJX,SAOQhG,EAAMyB,MACN,mBAAQqB,MAAM,IAAd,yBACA9C,EAAM+B,KAAKiB,KAAI,SAAA4C,GAAI,OACf,mBAAQ9C,MAAO8C,EAAK1C,GAApB,SAAwC0C,EAAKzC,MAAhByC,EAAK1C,UAO9C,mBACIhB,UAAU,8BACVQ,SAAUzC,EACV8C,SAAU/C,EAAMyB,KAHpB,SAMQzB,EAAMyB,MACN,mBAAQqB,MAAM,IAAd,yBACA9C,EAAM+B,KAAKiB,KAAI,SAAA4C,GAAI,OACf,mBAAQ9C,MAAO8C,EAAK1C,GAApB,SAAwC0C,EAAKzC,MAAhByC,EAAK1C,oB,gJC3EzDnD,EAAkB,SAACmD,GAE5B,OAA0B7C,EAAAA,EAAAA,UAAS,CAC/BoB,MAAK,EACLM,KAAK,GACLkE,MAAM,GACN7B,KAAK,KAJT,eAAOpE,EAAP,KAAckG,EAAd,KAQA,GAA0B7F,EAAAA,EAAAA,UAAS,GAAnC,eAAMH,EAAN,KAAaiG,EAAb,KAEMC,GAAYnF,EAAAA,EAAAA,SAAO,GAEnBoF,GAAef,EAAAA,EAAAA,cAAW,iBAAC,8GAGRG,EAAAA,EAAAA,GAAe,CAAEC,SAAQ,gBAHjB,UAGrBY,EAHqB,OAKrBF,EAAU/E,QALW,iDAQrBkE,QAAQC,IAAIc,GAEhBJ,EAAS,CACLzE,MAAK,EACLM,KAAK,CACD,CACImB,GAAG,EACHC,KAAK,qBACLuB,IAAI,GACJ6B,OAAO,GACPC,MAAM,KANV,eAQGF,EAAKtG,QAEZiG,MAAMK,EAAKG,OACXrC,MAAK,kBACEkC,EAAKlC,MADR,IAEAmC,QAAQG,EAAAA,EAAAA,IAAQJ,EAAKlC,KAAKmC,OAAO,IAAI,OAzBpB,kDA8BzBL,EAAS,CACLzE,MAAK,EACLM,KAAK,GACLqC,KAAK,KAjCgB,0DAoC/B,CAAClB,IAkBH,OAVAhC,EAAAA,EAAAA,YAAU,WACNmF,MACF,CAACA,KAEHnF,EAAAA,EAAAA,YAAU,WACN,OAAO,WACHkF,EAAU/E,SAAU,KAE1B,IAEI,CACFrB,MAAAA,EACAC,aAlBgB,SAAC0C,GACe,IAA7BC,SAASD,EAAEE,OAAOC,QAErBqD,EAAUxD,EAAEE,OAAOC,QAgBnB5C,OAAAA,EACAgG,SAAAA,K,sICzEK9F,EAAwB,SAAC8C,GAElC,OAAwB7C,EAAAA,EAAAA,UAAS,CAC7BoB,MAAK,EACLM,KAAK,KAFT,eAAOoD,EAAP,KAAaC,EAAb,KAKMC,GAAUC,EAAAA,EAAAA,cAAW,iBAAC,8GAGHG,EAAAA,EAAAA,GAAe,CAAEC,SAAQ,4BAAwBxC,KAH9C,OAGhBiC,EAHgB,OAKpBI,QAAQC,IAAIL,GAEZC,EAAQ,CACJ3D,MAAK,EACLM,KAAK,CACD,CACImB,GAAG,EACHC,KAAK,yBAHT,eAKGgC,MAdS,gDAoBpBC,EAAQ,CACJ3D,MAAK,EACLM,KAAK,KAtBW,yDAyB1B,CAACmB,IAkBH,OAdAhC,EAAAA,EAAAA,YAAU,WAEI,IAAPgC,IAGHkC,GAAQ,SAAAD,GAAI,yBACLA,GADK,IAER1D,MAAK,OAGT4D,OAEF,CAACA,IAEG,CACFlF,gBAAgBgF,K,qFCnDXwB,EAAc,SAAC,GAAiB,IAAD,IAAdvD,MAAAA,OAAc,MAAR,IAAQ,EAExC,EAA4CwD,EAAAA,SAAe,GAA3D,eAAOC,EAAP,KAAuBC,EAAvB,KAmBA,OAbAF,EAAAA,WAAgB,WAEZ,SAASG,IACLD,EAAkBlG,OAAOoG,aAM7B,OAHApG,OAAOe,iBAAiB,SAAUoF,GAClCA,IAEO,kBAAMnG,OAAOgB,oBAAoB,SAAUmF,MAEnD,CAACF,IAGAA,EAAiBzD,GAEb,mBAAQ6D,KAAK,SAAS/E,UAAU,kBAAkBgF,QApB5C,WACVtG,OAAOuG,SAAS,CAAC9E,IAAK,EAAG+E,SAAU,YAmB/B,UAAkE,cAAGlF,UAAU,wBAAwBmF,MAAM,UAE7G,0B,0EC3BCC,EAAQ,WACjB,OACI,iBAAKpF,UAAU,wCAAf,WACI,gBAAKA,UAAU,YACf,gBAAKA,UAAU,cAAf,8B,+ECHG,SAASqF,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["componets/generalTable/GeneralTableScreen.js","componets/generalTable/GeneralTableView1.js","componets/generalTable/GeneralTableView2.js","componets/generalTable/GetGeneralTableHook.js","componets/perfil/PerfilClubComponent.js","componets/perfil/PerfilClubsHook.js","componets/time/GetListTournamentHook.js","componets/utils/buttonFloat/ButtonFloatComponent.js","componets/utils/load2/Load2.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useContext , useEffect, useState, useRef} from 'react';\nimport {customeContext} from '../../context/context';\nimport {GetListTournamentHook} from '../time/GetListTournamentHook';\nimport {GetGeneralTableHook} from './GetGeneralTableHook';\n// import {Load2} from '../utils/load2/Load2';\nimport {ButtonFloat} from '../utils/buttonFloat/ButtonFloatComponent';\nimport {GeneralTableView1} from './GeneralTableView1';\nimport {GeneralTableView2} from './GeneralTableView2';\nimport {PerfilClubComponent} from '../perfil/PerfilClubComponent';\nimport {PerfilClubsHook} from '../perfil/PerfilClubsHook';\nimport {waitSwal,closeSwal} from '../utils/swalCustome';\n\n\nconst GeneralTableScreen = () => {\n\n    const { setContext } = useContext(customeContext);\n    \n    //Obtenemos los clubs\n    const {clubs,onChangeClub,idClub} = PerfilClubsHook();\n    \n    const {listTournaments} = GetListTournamentHook(idClub);\n    const [idTournament,setIdTournament] = useState(0);\n    const { tableGeneral } = GetGeneralTableHook(idTournament);\n    const [totalJournals,setTotalJournals] = useState([]);\n    const [widthScreen,setWidthScreen] = useState(window.innerWidth);\n\n    const onMounted = useRef(false);//Sólo al cambiar el select del club activamos la ventana de espere\n\n    useEffect(() => {\n        setContext( context => (\n            {   ...context,\n                titlePage : 'Tabla General'\n            })\n        );\n    },[setContext]);\n\n     //#region Controlamos la venta de espera cada que se cambia de club\n    //Cada que cambiamos el club y esperamos se cargen las listas de torneos\n    useEffect(() => {\n        if(onMounted.current)\n            waitSwal({html:'Cargando lista de torneos'});\n    },[idClub]);\n    //Cuando la lista de torneos se cargaron\n    useEffect(()=>{\n        if(onMounted.current)\n            closeSwal();\n    },[listTournaments.load]);\n    //Cada que se carga la información de algun torneo\n    useEffect(()=>{\n        if(onMounted.current)\n            closeSwal();\n        else\n            onMounted.current = true;\n    },[tableGeneral.load]);\n    //#endregion\n\n    useEffect(()=>{\n        const onResize = ()=>setWidthScreen( window.innerWidth )\n        \n        window.addEventListener('resize',onResize);\n\n        return () => {\n            window.removeEventListener('resize',onResize);\n        }\n\n    },[]);\n\n    useEffect(()=>{\n        let temp = [];\n        for(let i=1;i<=tableGeneral.list.journals;i++)    \n            temp.push(i);\n        setTotalJournals(temp);\n    },[tableGeneral.list.journals]);\n\n    const onChangeTournament = (e)=>{\n        if(parseInt(e.target.value) === 0)\n            return;\n        //cada que cambiamos de torneo\n        waitSwal({html:'Cargando torneo'});\n        setIdTournament(e.target.value);\n    }\n\n    return (\n        <div className=\"main-content\">\n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 mt-3\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n\n                                <PerfilClubComponent clubs={clubs} onChangeClub={onChangeClub}/>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-6 col-12 mt-5\" style={{position:\"relative\"}}>\n                                        <span style={{position:\"absolute\",top:-21,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Selecciona un torneo</span>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <select className=\"form-control mb-4 text-uppercase\" onChange={onChangeTournament} disabled={listTournaments.load} value={idTournament}>\n                                                \n                                                {\n                                                    listTournaments.load ?\n\n                                                    <option value=\"0\">Esperando...</option>:\n\n                                                    listTournaments.list.map(item=>(\n                                                        <option value={item.id} key={item.id} >{item.name}</option>\n                                                    ))\n                                                }\n                                                \n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {\n\n                                    tableGeneral.load ?\n                                    \n                                    // <div style={{marginTop:45}}> \n                                    //     <Load2/>\n                                    // </div> :\n                                    <></> :\n\n                                    widthScreen > 760\n\n                                    ?\n                                        <GeneralTableView1 totalJournals={totalJournals} tableGeneral={tableGeneral} />\n\n                                    :\n\n                                        <GeneralTableView2 totalJournals={totalJournals} tableGeneral={tableGeneral}/>\n\n                                }\n\n                                 <ButtonFloat hight={200}/>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GeneralTableScreen;\n","\r\nimport React from 'react'\r\n\r\nexport const GeneralTableView1 = ({totalJournals,tableGeneral}) => {\r\n    return (\r\n        <div className=\"table-responsive\" style={{padding:25}}>\r\n            <table className=\"table align-middle\" style={{marginTop:30}}>\r\n                <thead style={{background:\"#098BCE\",color:\"#FFF\",height:70,fontSize:15,verticalAlign:'middle',boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.52)\",borderRadius:20}}>\r\n                    <tr>\r\n                        <th scope=\"col\" style={{borderTopLeftRadius:20}}>Posición</th>\r\n                        <th scope=\"col\" style={{textAlign:'center'}}>Jugador</th>\r\n                        <th scope=\"col\">Cancha</th>\r\n                        \r\n                        {\r\n                            totalJournals.map( journal => <th scope=\"col\" key={journal}>J{journal}</th>)\r\n                        }\r\n\r\n                        <th scope=\"col\" style={{borderTopRightRadius:20}}>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\",borderBottomLeftRadius:20,borderBottomRightRadius:20}}>\r\n                {\r\n                    \r\n                    tableGeneral.list.users && \r\n                    \r\n                    tableGeneral.list.users.map(user =>(\r\n                        <tr style={{verticalAlign:'middle'}} key={user.id_user}>\r\n                            <th scope=\"row\" style={{paddingLeft: 40}} >{user.position}</th>\r\n                            <td style={{textAlign:'center'}}> \r\n                                <img style={{width:'50px',marginBottom:'10px',borderRadius:\"50%\",boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.32)\"}} alt=\"avatar\" src={user.img} /> \r\n                                <br />\r\n                                <span style={{fontSize:12,marginRight:6}}>{user.alias}</span>\r\n                                <br />\r\n                                {user.name} \r\n                            </td>\r\n                            <td>\r\n                                <span className=\"badge bg-danger\" style={{fontSize:25,marginTop:5}}> {user.court} </span>\r\n                            </td>\r\n\r\n                            {\r\n                                totalJournals.map( journal => (\r\n                                    <td key={journal}>\r\n                                        <span style={{width:80,fontSize:20,textAlign:'center'}}>\r\n                                            { user[\"journal\"+journal] }\r\n                                        </span>\r\n                                    </td>\r\n                                ))\r\n                            }\r\n                            <td>\r\n                                <span style={{width:80,fontSize:20,textAlign:'center'}}>\r\n                                    {user.pointsGenerals}\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nimport React from 'react'\r\n\r\nexport const GeneralTableView2 = ({totalJournals,tableGeneral})=> {\r\n    return (\r\n        tableGeneral.list.users && \r\n\r\n        tableGeneral.list.users.map(user =>(\r\n            <div \r\n                key={user.id_user}\r\n                style={{\r\n                    background:\"#fff\",\r\n                    padding:10,\r\n                    borderRadius:6,\r\n                    position:\"relative\",\r\n                    boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.52)\",\r\n                    marginBottom:15\r\n                }}\r\n            >\r\n            \r\n                <div style={{background:\"#007bff\",padding:10,color:\"#fff\",textAlign:'right'}}> \r\n                    <span style={{fontSize:12,marginRight:6}}>{user.alias}</span>\r\n                    <br />\r\n                    {user.name} \r\n                </div>\r\n                \r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"d-flex flex-column\"><b>Posición</b> <span className=\"badge bg-secondary\" style={{fontSize:25,marginTop:5}}> {user.position} </span></div>\r\n                    <img style={{width:'90px',margin:'10px',borderRadius:\"50%\",boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}} alt=\"avatar\" src={user.img} /> \r\n                    <div className=\"d-flex flex-column\"><b>Cancha</b> <span className=\"badge bg-danger\" style={{fontSize:25,marginTop:5}}> {user.court} </span></div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <h5>JORNADAS</h5>\r\n                    <hr style={{width:\"100%\"}}/>\r\n                    <h5>PUNTOS</h5>\r\n                </div>\r\n                \r\n                {\r\n                    totalJournals.map( journal => (\r\n                        <div className=\"row\" key={journal}>\r\n                            <div className=\"col-3 text-center\">\r\n                                {journal}\r\n                            </div>\r\n                            <div className=\"col-9 text-end\">\r\n                                {user[\"journal\"+journal] }\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }  \r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <hr style={{width:\"100%\"}}/>\r\n                </div>\r\n\r\n                 <div className=\"d-flex justify-content-end align-items-center\">\r\n                   <h4>Total</h4>\r\n                   <span className=\"badge bg-warning\" style={{fontSize:25,marginTop:5,marginLeft:5}}> {user.pointsGenerals} </span>\r\n                </div>\r\n              \r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\n\r\n","import {useState,useCallback,useEffect} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\n\r\nexport const GetGeneralTableHook = (id)=>{\r\n\r\n    const [data, setData] = useState({\r\n        load:true,\r\n        list:[]\r\n    });\r\n  \r\n    const getList = useCallback(async()=>{\r\n        console.log('llamada Lista...')\r\n\r\n        setData(data=>({\r\n            ...data,\r\n            load:true,\r\n        }));\r\n\r\n        try{\r\n            let data = await fetchCustome2( { endpoint : `/tournaments/table/${id}` } );\r\n           \r\n            console.log(data)\r\n\r\n            setData({\r\n                load:false,\r\n                list:data\r\n            });\r\n\r\n        }\r\n        catch(e){\r\n          \r\n            setData({\r\n                load:false,\r\n                list:[]\r\n            });\r\n        }\r\n\r\n    },[id]);\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        if(id === 0)\r\n            return;\r\n\r\n        getList();\r\n\r\n    },[getList]);\r\n\r\n    return{\r\n        tableGeneral:data\r\n    }\r\n}","import {useEffect,memo} from 'react';\r\nimport {Load2} from '../utils/load2/Load2';\r\n\r\nexport const PerfilClubComponentCarpet = ({clubs,idClub})=>{\r\n\r\n    useEffect(()=>{\r\n      \r\n    },[idClub])\r\n\r\n    return(\r\n        <div className=\"col-md-12 mt-3\">\r\n         {\r\n            clubs.load ?\r\n\r\n            <Load2 /> :\r\n\r\n            clubs.list.map(club=> {\r\n              \r\n                if(club.id === parseInt(idClub) && club.id !== 0){\r\n                    return (\r\n                        <div key={club.id} className=\"row\">\r\n                            <div className=\"col-md-4 col-xs-12 mt-1 text-center\">\r\n                                <h5>{club.name}</h5>\r\n                            </div>\r\n                            <div className=\"col-md-4 col-xs-12 mt-1 text-center\">\r\n                                <img \r\n                                    style={{width:200,marginBottom:10,boxShadow: \"-3px 3px 10px -2px rgba(0,0,0,0.52)\"}} \r\n                                    alt=\"logo\" \r\n                                    src={club.img} \r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-4 col-xs-12 mt-1 text-center\">\r\n                                <h5>{club.adress}</h5>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                return <span key={club.id}></span>\r\n            })\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const PerfilClubComponent = memo(({clubs,onChangeClub,select = false})=>{\r\n\r\n    return(\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col-12\" style={{position:\"relative\"}}>\r\n                <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Selecciona un club</span>\r\n                <div className=\"d-flex justify-content-between\">\r\n                       \r\n                    {\r\n                        select !== false ?\r\n                        <select \r\n                            className=\"form-control text-uppercase\" \r\n                            onChange={onChangeClub} \r\n                            disabled={clubs.load}\r\n                            value={select}\r\n                        >\r\n                            {\r\n                                clubs.load ?\r\n                                <option value=\"0\">Cargando...</option>:\r\n                                clubs.list.map(club=>(\r\n                                    <option value={club.id} key={club.id} >{club.name}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n\r\n                        :\r\n\r\n                        <select \r\n                            className=\"form-control text-uppercase\" \r\n                            onChange={onChangeClub} \r\n                            disabled={clubs.load}\r\n                        >\r\n                            {\r\n                                clubs.load ?\r\n                                <option value=\"0\">Cargando...</option>:\r\n                                clubs.list.map(club=>(\r\n                                    <option value={club.id} key={club.id} >{club.name}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n\r\n                    }\r\n                   \r\n\r\n                </div>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n})","import {useState,useCallback,useEffect,useRef} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\nimport {addChar} from '../../helpers/miselanius';\r\n\r\n\r\nexport const PerfilClubsHook = (id)=>{\r\n\r\n    const [clubs, setClubs] = useState({\r\n        load:true,\r\n        list:[],\r\n        list2:[],\r\n        user:{}\r\n    });\r\n\r\n\r\n    const[idClub,setIdClub] = useState(0);\r\n\r\n    const isMounted = useRef(true);\r\n  \r\n    const getListClubs = useCallback(async()=>{\r\n\r\n        try{\r\n            let resp = await fetchCustome2( { endpoint : `/clubs/list` } );\r\n\r\n            if(!isMounted.current)\r\n                return;\r\n\r\n                console.log(resp)\r\n\r\n            setClubs({\r\n                load:false,\r\n                list:[\r\n                    {\r\n                        id:0,\r\n                        name:'Selecciona un club',\r\n                        img:'',\r\n                        number:'',\r\n                        email:''\r\n                    },\r\n                    ...resp.clubs\r\n                ],\r\n                list2:resp.clubs2,\r\n                user:{\r\n                    ...resp.user,\r\n                    number: addChar(resp.user.number,'-',2)\r\n                }\r\n            });\r\n        }\r\n        catch(e){\r\n            setClubs({\r\n                load:false,\r\n                list:[],\r\n                user:{}\r\n            });\r\n        }\r\n    },[id]);\r\n\r\n    const onChangeClub= (e)=>{\r\n        if(parseInt(e.target.value) === 0)\r\n            return;\r\n        setIdClub(e.target.value);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getListClubs();\r\n    },[getListClubs]);\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    },[]);\r\n\r\n    return{\r\n        clubs,\r\n        onChangeClub,\r\n        idClub,\r\n        setClubs\r\n    }\r\n}","import {useState,useCallback,useEffect} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\n\r\nexport const GetListTournamentHook = (id)=>{\r\n\r\n    const [data, setData] = useState({\r\n        load:true,\r\n        list:[]\r\n    });\r\n  \r\n    const getList = useCallback(async()=>{\r\n    \r\n        try{\r\n            let data = await fetchCustome2( { endpoint : `/tournaments/list/${id}`} );\r\n\r\n            console.log(data)\r\n            \r\n            setData({\r\n                load:false,\r\n                list:[\r\n                    {\r\n                        id:0,\r\n                        name:'Selecciona un torneo'\r\n                    },\r\n                    ...data\r\n                ]\r\n                   \r\n            });\r\n        }\r\n        catch(e){\r\n            setData({\r\n                load:false,\r\n                list:[]\r\n            });\r\n        }\r\n    },[id]);\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        if(id === 0)\r\n            return;\r\n\r\n        setData(data=>({\r\n            ...data,\r\n            load:true,\r\n        }));\r\n\r\n        getList();\r\n\r\n    },[getList]);\r\n\r\n    return{\r\n        listTournaments:data\r\n    }\r\n}","import React from 'react';\r\nimport './buttonFloat.css';\r\n\r\n\r\nexport const ButtonFloat = ( {hight=700}) =>{\r\n\r\n    const [scrollPosition, setScrollPosition] = React.useState(0);\r\n   \r\n    const goTop = ()=>{\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    }\r\n\r\n    React.useEffect(() => {//Guardamos la posición del scroll\r\n\r\n        function updatePosition() {\r\n            setScrollPosition(window.pageYOffset);\r\n        }\r\n\r\n        window.addEventListener('scroll', updatePosition);\r\n        updatePosition();\r\n\r\n        return () => window.removeEventListener('scroll', updatePosition);\r\n\r\n    }, [scrollPosition]);\r\n\r\n    return (\r\n        scrollPosition > hight \r\n        ? \r\n            <button type=\"button\" className=\"btn buttonFloat\" onClick={goTop}><i className=\"fas fa-arrow-up fa-2x\" title=\"Up\"></i></button> \r\n        :\r\n            <></>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './load2.css';\r\n\r\nexport const Load2 = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"loader\"></div>\r\n            <div className=\"text-loader\">Cargando...</div>\r\n        </div>\r\n    )\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["setContext","useContext","customeContext","PerfilClubsHook","clubs","onChangeClub","idClub","listTournaments","GetListTournamentHook","useState","idTournament","setIdTournament","tableGeneral","GetGeneralTableHook","totalJournals","setTotalJournals","window","innerWidth","widthScreen","setWidthScreen","onMounted","useRef","useEffect","context","titlePage","current","waitSwal","html","closeSwal","load","onResize","addEventListener","removeEventListener","temp","i","list","journals","push","className","style","position","top","left","background","padding","color","onChange","e","parseInt","target","value","disabled","map","item","id","name","hight","GeneralTableView1","marginTop","height","fontSize","verticalAlign","boxShadow","borderRadius","scope","borderTopLeftRadius","textAlign","journal","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","users","user","paddingLeft","width","marginBottom","alt","src","img","marginRight","alias","court","pointsGenerals","id_user","GeneralTableView2","margin","marginLeft","data","setData","getList","useCallback","console","log","fetchCustome2","endpoint","PerfilClubComponentCarpet","club","adress","PerfilClubComponent","memo","select","list2","setClubs","setIdClub","isMounted","getListClubs","resp","number","email","clubs2","addChar","ButtonFloat","React","scrollPosition","setScrollPosition","updatePosition","pageYOffset","type","onClick","scrollTo","behavior","title","Load2","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}