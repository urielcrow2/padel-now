{"version":3,"file":"static/js/10.efc1cdfb.chunk.js","mappings":"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","sources":["componets/admins/adminValidate.js","componets/clubs/ClubAdmin.js","componets/clubs/ClubCarpet.js","componets/clubs/AddClub.js","componets/clubs/EditLogoClub.js","componets/clubs/ClubsScreen.js","componets/clubs/ClubsHook.js","componets/utils/load2/Load2.js","componets/utils/modal/Modal.js","componets/utils/switch/Switch.js"],"sourcesContent":["\r\nimport {infoSwal} from '../utils/swalCustome';\r\n\r\nexport const adminValidate = (form)=>{\r\n\r\n    let error = false;\r\n    const temp = Object.keys(form);\r\n\r\n    for(const name of temp){\r\n        if(switchValidate(name,form[name])){\r\n            error = true;\r\n            break;\r\n        }\r\n    }\r\n    return error;\r\n}\r\n\r\nexport const switchValidate = (name,value)=>{\r\n    switch(name){\r\n        case 'name':\r\n            return validateOnlyText(name,value);\r\n        case 'email':\r\n            return validateEmail(value);\r\n        case 'number':\r\n            return validatePhoneNumber(value);\r\n        case 'club':\r\n            return validateFreeText(name,value,true);\r\n        case 'adress':\r\n            return validateFreeText(name,value,false);\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nconst validateOnlyText = (name,value)=>{\r\n    if(value.trim() === \"\" || !value.trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").match(/^[a-zA-Z\\s]+$/)){\r\n        infoSwal({title: `${capitalize(esp[name] || name)} es obligatorio y debe tener solo letras y espacios`});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst validateFreeText = (name,value,required)=>{ \r\n\r\n    const expRegResp = (value.trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").match(/[<>\"\\'&]+/));\r\n\r\n    if( required && (value.trim() === \"\" || expRegResp) ){\r\n        infoSwal({title: `${capitalize( esp[name] || name )} es obligatorio y no debe tener caracteres especiales`});\r\n        return true;\r\n    }\r\n\r\n    if(value.trim() !== \"\" && expRegResp){\r\n        infoSwal({title: `${capitalize( esp[name] || name )} No debe tener caracteres especiales`});\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nconst validateEmail = (value)=>{\r\n    if( value.trim() === \"\" || !value.trim().match(/^([a-zA-Z0-9_\\-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{1,5}|[0-9]{1,3})(\\]?)$/)){\r\n        infoSwal({title: 'E-mail es obligatorio y debe ser valido'});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst validatePhoneNumber = (value)=>{\r\n    if(value !== \"\" && !value.trim().match(/^[0-9-]{14}$/)){\r\n        infoSwal({title: 'Teléfono a 10 digitos'});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst esp = {\r\n    'name' : 'nombre',\r\n    'club' : 'nombre del club',\r\n    'adress' : 'dirección'\r\n}\r\n\r\nconst capitalize = name => name[0].toUpperCase() + name.substring(1);\r\n","\r\n\r\nexport const ClubAdmin = ({root,focus,blur,changeGeneral,id,saveAdminRootFirstTime})=>{\r\n\r\n    return(\r\n        <div style={{\r\n            padding:10\r\n        }}>\r\n            <div className=\"mb-3 position-relative\">\r\n                <span className=\"position-absolute\" style={{top:-18,left:20,color:\"#CCC\"}}>Nombre</span>\r\n                <span style={{position:\"absolute\",top:-12,right:25,color:\"#00a65a\"}}><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></span>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control text-uppercase\" \r\n                    name=\"name\"\r\n                    value={root.name}\r\n                    onChange={(e)=>changeGeneral(e.target.name,e.target.value,id,root.id)} \r\n                    onDoubleClick={()=>changeGeneral(\"disabledName\",false,id,root.id)} \r\n                    onFocus={(e)=>focus(e)} \r\n                    onBlur = { (e)=>blur(e,'disabledName',id,root.id) }\r\n                    readOnly={root.disabledName}\r\n                />\r\n            </div>\r\n            <div className=\"mb-3 position-relative mt-3\">\r\n                <span className=\"position-absolute\" style={{top:-18,left:20,color:\"#CCC\"}}>E-mail</span>\r\n                <span style={{position:\"absolute\",top:-12,right:25,color:\"#00a65a\"}}><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></span>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control text-lowercase\" \r\n                    name=\"email\"\r\n                    value={root.email}\r\n                    onChange={(e)=>changeGeneral(e.target.name,e.target.value,id,root.id)} \r\n                    onDoubleClick={()=>changeGeneral(\"disabledEmail\",false,id,root.id)} \r\n                    onFocus={(e)=>focus(e)} \r\n                    onBlur = {(e)=>blur(e,'disabledEmail',id,root.id)}\r\n                    readOnly={root.disabledEmail}\r\n                />\r\n            </div>\r\n            <div className=\"mb-3 position-relative mt-3\">\r\n                <span className=\"position-absolute\" style={{top:-18,left:20,color:\"#CCC\"}}>Teléfono</span>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    name=\"number\"\r\n                    value={root.number ? root.number : ''}\r\n                    onChange={(e)=>changeGeneral(e.target.name,e.target.value,id,root.id)} \r\n                    onDoubleClick={()=>changeGeneral(\"disabledNumber\",false,id,root.id)} \r\n                    onFocus={(e)=>focus(e)} \r\n                    onBlur = {(e)=>blur(e,'disabledNumber',id,root.id)}\r\n                    readOnly={root.disabledNumber}\r\n                />\r\n            </div>\r\n            {\r\n                !root.id \r\n\r\n                &&\r\n\r\n                <div className=\"col-12 mt-3 text-center\">\r\n                    <button type=\"button\" className=\"btn btn btn-outline-primary\" onClick={()=>saveAdminRootFirstTime(id)} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}}>\r\n                        Guardar administrador principal\r\n                    </button>\r\n                </div>\r\n\r\n            }\r\n           \r\n            \r\n        </div>\r\n    )\r\n}","import {Switch} from '../utils/switch/Switch';\r\nimport {ClubAdmin} from './ClubAdmin';\r\n\r\nexport const ClubCarpet = ({\r\n    id,\r\n    club,\r\n    adress,\r\n    img,\r\n    status,\r\n    root,\r\n    disabledClub,\r\n    disabledAdress,\r\n    btnMoreInfo,\r\n    deleteClub,\r\n    changeGeneral,\r\n    //changeGeneralRoot,\r\n    focus,\r\n    blur,\r\n    //blurRoot,\r\n    saveAdminRootFirstTime,\r\n    changeImgClub\r\n})=>{\r\n\r\n    return(\r\n            <div className=\"col-md-4\" style={{marginBottom:50}}>\r\n                <div style={{\r\n                    background:\"#fff\",\r\n                    padding:10,\r\n                    borderRadius:6,\r\n                    position:\"relative\",\r\n                    boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.52)\"\r\n                }}>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n\r\n                        <div className=\"position-relative\">\r\n\r\n                            <i \r\n                                className=\"fa fa-picture-o\" \r\n                                aria-hidden=\"true\" \r\n                                onClick={()=>changeImgClub(id,img,club)}\r\n                                style={{\r\n                                    cursor:'pointer',\r\n                                    fontSize:23,\r\n                                    position:'absolute',\r\n                                    right:-18,\r\n                                    top:-9,\r\n                                    padding:7,\r\n                                    background:'#098BEC',\r\n                                    color:'#FFF',\r\n                                    borderRadius:'100%',\r\n                                    opacity:.8\r\n                                }}>\r\n                            </i> \r\n                            <img \r\n                                style={{width:200,marginBottom:10,boxShadow: \"-3px 3px 10px -2px rgba(0,0,0,0.52)\"}} \r\n                                alt=\"logo\" \r\n                                src={img} \r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <Switch \r\n                            isOn={status} \r\n                            click={()=>changeGeneral(\"status\",!status,id)}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"position-relative\">\r\n                        <span style={{position:\"absolute\",top:-21,left:0,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Nombre del club</span>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"club\"\r\n                            className=\"form-control mb-2 mt-4 text-uppercase\" \r\n                            value={club ? club : \"\"} \r\n                            onChange={(e)=>changeGeneral(e.target.name,e.target.value,id)} \r\n                            onDoubleClick={()=>changeGeneral(\"disabledClub\",false,id)} \r\n                            onFocus={(e)=>focus(e)} \r\n                            onBlur = {(e)=>blur(e,'disabledClub',id)}\r\n                            readOnly={disabledClub}\r\n                        />\r\n                    </div>\r\n\r\n                    <span>\r\n                        <b>Admin</b> \r\n                        <div className=\"text-truncate text-uppercase\">{root.name ? root.name : '\\u00A0'}</div> \r\n                    </span>\r\n\r\n                    <div className=\"d-flex justify-content-center\"><hr style={{width:\"80%\"}}/></div>\r\n\r\n                    <div className=\"accordion mt-2\">\r\n                        <div className=\"accordion-item\">\r\n                            <h2 className=\"accordion-header d-flex justify-content-between\">\r\n                                <button \r\n                                    className=\"btn-toggle d-flex justify-content-center\"\r\n                                    type=\"button\" \r\n                                    onClick={()=>changeGeneral(\"btnMoreInfo\",!btnMoreInfo,id)} \r\n                                    style={{padding:5}}\r\n                                >\r\n                                    { btnMoreInfo ? <i className=\"fa fa-plus-circle fa-2x\" aria-hidden=\"true\"></i> : <i className=\"fa fa-minus-circle fa-2x\" aria-hidden=\"true\"></i> }\r\n                                </button>\r\n                            </h2>\r\n                            <div className={`accordion-collapse collapse ${btnMoreInfo ? '' : 'show'}`} >\r\n                                <div className=\"accordion-body position-relative\">\r\n                                    <span style={{position:\"absolute\",top:8,left:20,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Dirección del club</span>\r\n                                    <textarea \r\n                                        name=\"adress\"\r\n                                        className=\"form-control text-uppercase\" \r\n                                        style={{maxHeight:200,marginTop:15}}\r\n                                        rows=\"5\"\r\n                                        value={adress ? adress : ''}\r\n                                        onChange={(e)=>changeGeneral(e.target.name,e.target.value,id)} \r\n                                        onDoubleClick={()=>changeGeneral('disabledAdress',false,id)} \r\n                                        onFocus={(e)=>focus(e)} \r\n                                        onBlur = {(e)=>blur(e,'disabledAdress',id)}\r\n                                        readOnly={disabledAdress}\r\n                                    />\r\n                                </div>\r\n\r\n                                <hr />\r\n\r\n                                <div className=\"text-center\">\r\n                                    <img \r\n                                        style={{width:'70px',marginBottom:'10px',borderRadius:\"50%\",boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.52)\"}} \r\n                                        alt=\"avatar\" \r\n                                        src={root.img}\r\n                                     />\r\n                                </div>\r\n\r\n                                <ClubAdmin \r\n                                    root={root} \r\n                                    changeGeneral={changeGeneral}\r\n                                    focus={focus}\r\n                                    blur={blur}\r\n                                    id={id}\r\n                                    saveAdminRootFirstTime={saveAdminRootFirstTime}\r\n                                />\r\n\r\n                                <hr />\r\n\r\n                                <button \r\n                                    className=\"btn btn-lg btn-outline-danger d-flex\"\r\n                                    type=\"button\" \r\n                                    onClick={()=>deleteClub(club,id)} \r\n                                    style={{padding:5,margin:5}}\r\n                                >\r\n                                    <i className=\"fa fa-trash fa-2x\" aria-hidden=\"true\"></i> \r\n                                </button>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n}","import {useState,useRef} from 'react';\r\nimport Cropper from \"react-cropper\";\r\nimport {waitSwal,mixinSwal,infoSwal} from '../utils/swalCustome';\r\nimport {adminValidate} from '../admins/adminValidate';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nconst imgClubDefault = process.env.PUBLIC_URL + '/assets/img/default/no-image-club.png';\r\nconst imgUserDefault = process.env.PUBLIC_URL + '/assets/img/default/no-image.jpg';\r\n\r\nexport const AddClub = ({newClub})=>{\r\n\r\n    const [imageCropper, setImageCropper] = useState(imgClubDefault);\r\n    const cropperRef = useRef();\r\n    const inputFile = useRef(null);\r\n    const [form,setForm] = useState({\r\n        club:\"\",\r\n        adress:\"\"\r\n    });\r\n \r\n    const onChangeImg = (e) => {\r\n        e.preventDefault();\r\n        let file = e.target.files[0];\r\n        if (/\\.(?=jpg|jpeg|png)/gi.test(file.name.toLowerCase())) {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                setImageCropper(reader.result);\r\n                inputFile.current.value = \"\";\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        else{\r\n            return infoSwal({\r\n                icon: 'info',\r\n                title: 'Formato de imagen inválido',\r\n                text: `Sólo se permiten imagenes jpg o jpeg` ,\r\n            });\r\n        }\r\n    };\r\n      \r\n    const clickInputFile = ()=>{\r\n        inputFile.current.click()\r\n    }\r\n\r\n    const onChangeInput = (e) =>{\r\n\r\n        setForm({\r\n            ...form,\r\n            [e.target.name] : e.target.value.toUpperCase()\r\n        })\r\n\r\n    }\r\n\r\n    const createImg = async()=>{\r\n        if (typeof cropperRef.current !== \"undefined\" && imageCropper !== imgClubDefault) {\r\n            try{\r\n                const newImage = cropperRef.current.cropper.getCroppedCanvas({\r\n                    width: 420,//podemos establecer un tamaño fijo en la imagen final en este caso manejamos la relación 21 / 9\r\n                    height: 180,\r\n                    fillColor: '#fff'\r\n                })\r\n                .toDataURL(\"image/jpeg\",0.7);//bajamos la calidad para disminuir considerablemente el peso sin afectar la calidad\r\n\r\n                setImageCropper(imgClubDefault);\r\n    \r\n                const blob = await fetch(newImage).then(temp => temp.blob());//con la imagen resultante creamos un blob\r\n                const temp = new File([blob], \"temporal.jpg\", {type: blob.type});//hecho el blob creamos el archivo\r\n    \r\n                return temp;\r\n            }\r\n            catch(e){\r\n                mixinSwal({ icon: 'error',title: `Ocurrio un error al procesar la imagen`});\r\n                return \"\"\r\n            }\r\n            \r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    const saveForm = async() => {\r\n\r\n        if(adminValidate(form))\r\n            return\r\n\r\n        const data = new FormData();\r\n        const img = await createImg();\r\n        if(img)\r\n            data.append(\"img\",img);\r\n        data.append('name',form.club.trim());\r\n        data.append('adress',form.adress.trim());\r\n\r\n        waitSwal({html:'Creando club'});\r\n\r\n        try{\r\n            const resp = await fetchCustome2({ \r\n                endpoint : '/clubs',\r\n                method :'POST',\r\n                body:data\r\n            });\r\n\r\n           if(resp.id){\r\n                newClub( {\r\n                    id:resp.id,\r\n                    club:resp.name,\r\n                    adress:resp.adress,\r\n                    img:resp.img,\r\n                    status:resp.status,\r\n                    root:{\r\n                        id:'',\r\n                        name:'',\r\n                        email:'',\r\n                        number:'',\r\n                        img: imgUserDefault,\r\n                        disabledName:  false,\r\n                        disabledEmail: false,\r\n                        disabledNumber: false       \r\n                    },\r\n                    disabledClub:true,\r\n                    disabledAdress:true,\r\n                    btnMoreInfo:true,\r\n                });\r\n\r\n                setForm({\r\n                    club:\"\",\r\n                    adress:\"\"\r\n                });\r\n\r\n                return mixinSwal({ icon: 'success',title: `Club agregado`})\r\n           }\r\n           else{\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunucación con el servidor, intentelo más tarde ashh` ,\r\n                });\r\n           }\r\n        }\r\n        catch(e){\r\n            infoSwal({\r\n                icon: 'error',\r\n                title: 'Ocurrio un error',\r\n                text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n            });\r\n        }\r\n            \r\n    };\r\n\r\n    return(\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col-md-6 col-xs-12 d-flex justify-content-center mb-3\">\r\n                <div className=\"position-relative\" style={{width:320,height:'fit-content',border:'2px dashed',padding:8,cursor:'pointer'}}>\r\n                    <Cropper\r\n                        ref={cropperRef}\r\n                        src={imageCropper}\r\n                        style={{ maxHeight: 200,width: 300}}\r\n                        initialAspectRatio={21 / 9}\r\n                        cropBoxResizable={false}\r\n                        dragMode = 'move'\r\n                        guides={false}\r\n                        viewMode={0}\r\n                        zoomTo={.5}\r\n                        cropBoxMovable={false}\r\n                        toggleDragModeOnDblclick={false}\r\n                    />\r\n                    <i className=\"fa fa-2x fa-picture-o position-absolute\" onClick={clickInputFile} style={{top:-20,right:-15,color:'#fff',background:'rgb(9, 139, 206)',padding:12,borderRadius:50}} aria-hidden=\"true\"></i>\r\n                    <input ref={inputFile} type=\"file\" onChange={onChangeImg} style={{display:'none'}}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 col-xs-12 mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 position-relative\">\r\n                        <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Nombre del club</span>\r\n                        <span style={{position:\"absolute\",top:-12,right:25,color:\"#00a65a\"}}><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></span>\r\n                        <input \r\n                            type=\"text\" \r\n                            onChange={onChangeInput} \r\n                            name=\"club\" \r\n                            className=\"form-control text-uppercase\" \r\n                            value={form.club}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-12 position-relative mt-3\">\r\n                        <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Dirección</span>\r\n                        <textarea \r\n                            name=\"adress\"\r\n                            value={form.adress}\r\n                            className=\"form-control text-uppercase\" \r\n                            style={{maxHeight:200}}\r\n                            rows=\"5\"\r\n                            onChange={onChangeInput} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"col-12 mt-3 d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn btn-outline-primary\" onClick={saveForm} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useEffect,useContext,useState,useRef} from 'react';\r\nimport Cropper from \"react-cropper\";\r\nimport {Modal} from '../utils/modal/Modal';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\nimport {waitSwal,mixinSwal,infoSwal} from '../utils/swalCustome';\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nexport const EditLogoClub = ({editImage,updateClubs})=>{\r\n\r\n    const [modal,setModal] = useState(true);//toggle modal\r\n    const cropperRef = useRef(null);\r\n    const [imageCropper, setImageCropper] = useState(editImage.img);\r\n    const editButton = useRef(true);\r\n    const inputFile = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        editButton.current = true;\r\n        setImageCropper(editImage.img)\r\n        setModal(true);\r\n    },[editImage])\r\n\r\n    const clickInputFile = ()=>{\r\n        inputFile.current.click()\r\n    }\r\n \r\n    const onChangeImg = (e) => {\r\n        e.preventDefault();\r\n        let file = e.target.files[0];\r\n        if (/\\.(?=jpg|jpeg|png)/gi.test(file.name.toLowerCase())) {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                editButton.current = false;\r\n                setImageCropper(reader.result);\r\n                inputFile.current.value = \"\";\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        else{\r\n            return infoSwal({\r\n                icon: 'info',\r\n                title: 'Formato de imagen inválido',\r\n                text: `Sólo se permiten imagenes jpg o jpeg` ,\r\n            });\r\n        }\r\n    };\r\n\r\n    const createImg = async()=>{\r\n        if (typeof cropperRef.current !== \"undefined\") {\r\n            try{\r\n                const newImage = cropperRef.current.cropper.getCroppedCanvas({\r\n                    width: 420,//podemos establecer un tamaño fijo en la imagen final en este caso manejamos la relación 21 / 9\r\n                    height: 180,\r\n                    fillColor: '#fff'\r\n                })\r\n                .toDataURL(\"image/jpeg\",0.7);//bajamos la calidad para disminuir considerablemente el peso sin afectar la calidad\r\n\r\n                const blob = await fetch(newImage).then(temp => temp.blob());//con la imagen resultante creamos un blob\r\n                const temp = new File([blob], \"temporal.jpg\", {type: blob.type});//hecho el blob creamos el archivo\r\n    \r\n                return temp;\r\n            }\r\n            catch(e){\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error al procesar la imagen',\r\n                    text: `` ,\r\n                });\r\n                return \"\"\r\n            }\r\n            \r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    const updateImg = async(id)=>{\r\n       \r\n        const form = new FormData();\r\n        form.append(\"id\",id);\r\n        form.append(\"img\",await createImg());\r\n        form.append(\"_method\",'patch');\r\n\r\n        waitSwal({html:'Actualizando logo'});\r\n\r\n        try{\r\n\r\n            const resp = await fetchCustome2({ \r\n                endpoint : '/clubs/logo',\r\n                method :'POST',\r\n                body:form\r\n            });\r\n\r\n            if(resp !== \"\"){\r\n                mixinSwal({ icon: 'success',title: `El logo se actualizó correctamente`});\r\n                updateClubs(id,resp);\r\n                setModal(false);\r\n            }\r\n            else{\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n                });\r\n            }\r\n\r\n        }\r\n        catch(e){\r\n            infoSwal({\r\n                icon: 'error',\r\n                title: 'Ocurrio un error',\r\n                text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n       \r\n            <Modal modal={modal} setModal={setModal}>\r\n                <div className=\"modal-crow-header\">\r\n                    <h4>{editImage.club}</h4>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"position-relative\" style={{width:320,height:'fit-content',border:'2px dashed',padding:8,cursor:'pointer'}}>\r\n                        <Cropper\r\n                            ref={cropperRef}\r\n                            src={imageCropper}\r\n                            style={{ maxHeight: 200,width: 300}}\r\n                            initialAspectRatio={21 / 9}\r\n                            cropBoxResizable={false}\r\n                            dragMode = 'move'\r\n                            guides={false}\r\n                            viewMode={0}\r\n                            zoomTo={.5}\r\n                            cropBoxMovable={false}\r\n                            toggleDragModeOnDblclick={false}\r\n                        />\r\n                        <i className=\"fa fa-2x fa-picture-o position-absolute\" onClick={clickInputFile} style={{top:-20,right:-15,color:'#fff',background:'rgb(9, 139, 206)',padding:12,borderRadius:50}} aria-hidden=\"true\"></i>\r\n                        <input ref={inputFile} type=\"file\" onChange={onChangeImg} style={{display:'none'}}/>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className=\"d-flex justify-content-center mt-5\">\r\n                     <button \r\n                        className=\"btn btn-primary btn-lg\"\r\n                        type=\"button\" \r\n                        disabled={editButton.current}\r\n                        onClick={()=>updateImg(editImage.id)} \r\n                        style={{padding:5,margin:5}}\r\n                    >\r\n                       Remplazar imagen\r\n                    </button>\r\n                </div>\r\n            </Modal>\r\n        \r\n    )\r\n    \r\n\r\n}","import {useEffect,useContext,useState} from 'react';\r\nimport {customeContext} from '../../context/context';\r\nimport {ClubCarpet} from './ClubCarpet';\r\nimport {ClubsHook} from './ClubsHook';\r\nimport {Load2} from '../utils/load2/Load2';\r\nimport {AddClub} from './AddClub';\r\nimport {EditLogoClub} from './EditLogoClub';\r\n\r\nconst ClubsScreen = ()=>{\r\n\r\n    const { setContext } = useContext(customeContext);\r\n    const { \r\n        clubs,\r\n        setClubs,\r\n        changeGeneral,\r\n        //changeGeneralRoot,\r\n        blur,\r\n        //blurRoot,\r\n        focus,\r\n        deleteClub,\r\n        saveAdminRootFirstTime\r\n    } = ClubsHook();\r\n\r\n    const [editImage, setEditImage] = useState({\r\n        id:'',\r\n        img:'',\r\n        club:''\r\n    });\r\n\r\n    useEffect(() => {\r\n        setContext( context => (\r\n            {   ...context,\r\n                titlePage : 'Clubs'\r\n            })\r\n        );\r\n    },[setContext]);\r\n\r\n    const newClub = (newClub) =>{\r\n\r\n        const temp = [\r\n            ...clubs.data,\r\n            newClub\r\n        ];\r\n\r\n        temp.sort((a,b) => {\r\n            if(a.club > b.club)\r\n                return 1;\r\n            if(a.club < b.club)\r\n                return -1;\r\n            return 0;\r\n        });\r\n\r\n        setClubs({\r\n            ...clubs,\r\n            data:temp\r\n        });\r\n    }\r\n\r\n    const updateClubs = (id,img)=>{\r\n        const temp = [\r\n            ...clubs.data\r\n        ];\r\n\r\n        temp.forEach( club => {\r\n            if(club.id === id)\r\n                club.img = img;\r\n        });\r\n        \r\n        setClubs({\r\n            ...clubs,\r\n            data:temp\r\n        })\r\n    }\r\n\r\n    const changeImgClub = (id,img,club)=>{\r\n        setEditImage({\r\n            id,\r\n            img,\r\n            club\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"main-content\">\r\n\r\n\r\n            <div className=\"main-content-inner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                        <div className=\"card\">\r\n                            <div className =\"card-body\">\r\n\r\n                                <AddClub newClub={newClub} />\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"main-content-inner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"card\">\r\n                            <div className =\"card-body\">\r\n                                <div className=\"row\">\r\n                                    {\r\n\r\n                                        clubs.load ?\r\n\r\n                                        <Load2 /> : \r\n\r\n                                        clubs.data.map(e=>{\r\n                                            return(\r\n                                                <ClubCarpet \r\n                                                    key={e.id} \r\n                                                    changeGeneral={changeGeneral}\r\n                                                    blur={blur}\r\n                                                    focus={focus}\r\n                                                    deleteClub={deleteClub}\r\n                                                    saveAdminRootFirstTime={saveAdminRootFirstTime}\r\n                                                    changeImgClub={changeImgClub}\r\n                                                    {...e}\r\n                                                />\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        editImage.id\r\n                                        &&\r\n                                        <EditLogoClub editImage={editImage} updateClubs={updateClubs}/>\r\n                                    }\r\n\r\n                                </div>\r\n            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClubsScreen;","\r\nimport {useState,useRef,useEffect,useCallback} from 'react';\r\nimport {waitSwal,mixinSwal,infoSwal,quetionSwal2} from '../utils/swalCustome';\r\nimport {switchValidate} from '../admins/adminValidate';\r\nimport {addChar,maskPhone} from '../../helpers/miselanius';\r\nimport {adminValidate} from '../admins/adminValidate';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\nexport const ClubsHook = ()=>{\r\n\r\n    const [clubs,setClubs] = useState({\r\n        load : true,\r\n        data : []\r\n    });\r\n\r\n    const previusValue = useRef(null);\r\n\r\n    const isMounted = useRef(true);\r\n\r\n    const changeGeneral = async(name,value,id,id2=0)=>{\r\n\r\n        //se manadan a actualizar al backend únicamente los campos boolean (como los check)\r\n        if(await updateInputsBooleans(name,value,id))\r\n            return;\r\n\r\n        const temp = [...clubs.data];\r\n\r\n        temp.forEach(club=>{\r\n            if(club.id === id){\r\n                if(id2 === 0)\r\n                    club[name] = applyMask(name,value);\r\n                else\r\n                    club.root[name] = applyMask(name,value);\r\n            }\r\n        });\r\n\r\n        setClubs({\r\n            ...clubs,\r\n            data:temp\r\n        });\r\n    }\r\n\r\n    const focus = (e)=>{//Guardamos el valor previo para saber si hubo cambios y mandar al backend o no\r\n        previusValue.current = e.target.value.trim()\r\n    }\r\n\r\n    //id2 = 0 ------>se trata de un elemento de primer nivel\r\n    //id2 > 0 ------>se trata de un elemento de segundo nivel con id\r\n    //id2 === \"\" ---->elemento de segundo nivel pero sin id asignado\r\n    const blur = async(e,popertyReadOnly,id,id2=0)=>{//actualizamos los campos de texto\r\n        \r\n        if(id2 === \"\")//No hacemos la validación campo a campo, esperamos que guarde el formulario con el botón\r\n            return;\r\n\r\n        //Sólo si se hace cambio en el campo entramos\r\n        if(previusValue.current !== e.target.value){\r\n            if(switchValidate(e.target.name, e.target.value))//validamos que el formato del campo cumpla con la validación\r\n                changeGeneral(e.target.name, previusValue.current,id,id2);//de lo contrario regresamos el valor anterior\r\n            else{\r\n                const isIdClubOrAdmin = id2 === 0 ? id : id2;//dependiendo los campos puede ser actualizar el club o el usuario\r\n                if(await updateInputs(e.target.name,e.target.value,isIdClubOrAdmin))//esperamos la respuesta del backen\r\n                    changeGeneral(e.target.name, previusValue.current,id,id2);//Regresamos el valor anterior porque hubo un error con el backend\r\n            }\r\n        }\r\n\r\n        changeGeneral(popertyReadOnly,true,id,id2);//Cerramos la edición del campo\r\n            \r\n    }\r\n\r\n    const updateInputFetch = async({name,id,value,endpoint,label})=>{\r\n       \r\n        waitSwal({html:`Actualizando ${label}`});\r\n\r\n        const body = {\r\n            id,\r\n            [name] : value\r\n        }\r\n\r\n        try{\r\n            const resp = await fetchCustome2({ \r\n                endpoint,\r\n                method :'PATCH',\r\n                body,\r\n                json:true\r\n            });\r\n\r\n            console.log(resp)\r\n\r\n           if(resp.id){\r\n                mixinSwal({ icon: 'success',title: `${label} actualizado`});\r\n                return false;\r\n           }\r\n           else{\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunicación con el servidor, intentelo más tarde` ,\r\n                });\r\n                return true;\r\n           }\r\n        }\r\n        catch(e){\r\n            infoSwal({\r\n                icon: 'error',\r\n                title: 'Ocurrio un error',\r\n                text: `Error de comunicación con el servidor, intentelo más tarde` ,\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    //Primero se hace el camio en el campo y despues se manda al backen\r\n    const updateInputs = async(name,value,id)=>{\r\n        switch (name) {\r\n            case 'club':\r\n                return await updateInputFetch({endpoint : '/clubs',name:'name',value,id,label:'nombre del club'});\r\n            case 'adress':\r\n                return await updateInputFetch({endpoint : '/clubs',name:'adress',value,id,label:'dirección'});\r\n            case 'name':\r\n                return await updateInputFetch({endpoint : '/users',name:'name',value,id,label:'nombre del administrador'});\r\n            case 'email':\r\n                return await updateInputFetch({endpoint : '/users',name:'email',value,id,label:'e-mail'});\r\n            case 'number':\r\n                return await updateInputFetch({endpoint : '/users',name:'number',value:value.replace(/[-]/g,''),id,label:'teléfono'});\r\n            default:\r\n                return false;\r\n        }    \r\n    }\r\n\r\n    //Primero se manda al backend y despues se actualiza el campo\r\n    //#region Verificamos que sólo se mande a actualizar los campos booleans\r\n    const updateInputsBooleans = async(name,val,id)=>{\r\n        switch (name) {\r\n            case 'status':\r\n                return await updateInputFetch({endpoint : '/clubs',name:'status',value: val ? 1 : 0,id,label:'estatus'});\r\n            default:\r\n                return false;\r\n        }    \r\n    }\r\n    //#endregion\r\n\r\n    const deleteClub = (name,id)=>{\r\n        quetionSwal2(`¿Deseas eliminar al club: \\n${name}?`,'Al eliminar al club se desencadenará un eliminación masiva de torneos, jugadores y todo lo relacionado al club',async(resp)=>{\r\n            if(resp.isConfirmed){\r\n                \r\n                waitSwal({html:`Eliminando club`});\r\n        \r\n                try{\r\n                    const resp = await fetchCustome2({ \r\n                        endpoint:`/clubs/${id}`,\r\n                        method :'DELETE',\r\n                    });\r\n        \r\n                   if(resp.id){\r\n\r\n                        setClubs({\r\n                            ...clubs,\r\n                            data:clubs.data.filter( club => club.id !== id)\r\n                        });\r\n\r\n                       mixinSwal({ icon: 'success',title: `${name} eliminado`});\r\n\r\n                   }\r\n                   else{\r\n                        infoSwal({\r\n                            icon: 'error',\r\n                            title: 'Ocurrio un error',\r\n                            text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n                        });\r\n                   }\r\n                }\r\n                catch(e){\r\n                    infoSwal({\r\n                        icon: 'error',\r\n                        title: 'Ocurrio un error',\r\n                        text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n                    });\r\n                }\r\n            } \r\n        });\r\n    }\r\n\r\n    //#region Aplicamos mascaras a los campos que lo necesiten\r\n    const applyMask = (name,value)=>{\r\n        switch(name){\r\n            case 'number':\r\n                return maskPhone(value);\r\n            default:\r\n                return value;\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    const saveAdminRootFirstTime = async(id)=>{\r\n\r\n        //Como sólo paso el id por parametro, tengo que buscar en el arreglo la data del formulario.\r\n        //Ya que todo lo estoy manejando en el hook \r\n        const form = clubs.data.find( club => club.id === id)\r\n        if(adminValidate(form.root))\r\n            return;\r\n        \r\n        //busco en todo el arreglo que el email que quiero registar no se repita\r\n        //aparece una vez es ok, se trata del mismo registro que estoy queriendo guardar, recuerda que el hook lo maneja\r\n        //aparece 2 entonces ya existe\r\n        const correoExistente = clubs.data.filter( club => club.root.email === form.root.email)\r\n        if( correoExistente.length > 1 ){\r\n            infoSwal({title: 'E-mail del administrador ya existe'});\r\n            return true;\r\n        }\r\n\r\n        const body = {\r\n            id_club : id,\r\n            name : form.root.name,\r\n            email : form.root.email,\r\n            number : form.root.number.replace(/[-]/g,'')\r\n        }\r\n\r\n        waitSwal({html:'Agregando admistrador'});\r\n\r\n        try{\r\n\r\n            const resp = await fetchCustome2({ \r\n                endpoint : '/users/admin_club',\r\n                method :'POST',\r\n                body,\r\n                json:true\r\n            });\r\n\r\n            console.log(resp);\r\n\r\n           if(resp.id){\r\n            mixinSwal({ icon: 'success',title: `El administrador se actualizó correctamente`});\r\n\r\n                const temp = [...clubs.data];\r\n\r\n                temp.forEach(club=>{\r\n                    if(club.id === id){\r\n                        club.root = {\r\n                            ...club.root,\r\n                            id:resp.id,\r\n                            disabledName:  true,\r\n                            disabledEmail: true,\r\n                            disabledNumber: true      \r\n                            // name:resp.name,\r\n                            // email:resp.email,\r\n                            // number:addChar(resp.number,'-',2),\r\n                            // img:imgUserDefault,\r\n                        }\r\n                    }\r\n                });\r\n\r\n                setClubs({\r\n                    ...clubs,\r\n                    data:temp\r\n                });\r\n               \r\n           }\r\n           else{\r\n               if(resp.errors.email){\r\n                    return infoSwal({title: 'E-mail del administrador ya existe'});\r\n               }\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n                });\r\n           }\r\n\r\n        }\r\n        catch(e){\r\n            infoSwal({\r\n                icon: 'error',\r\n                title: 'Ocurrio un error',\r\n                text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n            });\r\n        }\r\n    }\r\n\r\n    const getClubs = useCallback(async()=>{\r\n        \r\n        let data = await fetchCustome2( { endpoint : `/clubs` } );\r\n\r\n        if(!isMounted.current)\r\n        return;\r\n\r\n        data = data.map(club=>({\r\n            ...club,\r\n            disabledClub:true,\r\n            disabledAdress:true,\r\n            btnMoreInfo:true,\r\n            root : {\r\n                ...club.root,\r\n                number:addChar(club.root.number,'-',2),\r\n                disabledName: club.root.name ? true : false,\r\n                disabledEmail: club.root.name ? true : false,\r\n                disabledNumber: club.root.name ? true : false\r\n            }\r\n        }));\r\n        \r\n        setClubs({\r\n            load:false,\r\n            data\r\n        });\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        getClubs();\r\n    },[getClubs]);\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    },[]);\r\n\r\n\r\n    return {\r\n        clubs,\r\n        setClubs,\r\n        changeGeneral,\r\n        focus,\r\n        blur,\r\n        deleteClub,\r\n        saveAdminRootFirstTime\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './load2.css';\r\n\r\nexport const Load2 = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"loader\"></div>\r\n            <div className=\"text-loader\">Cargando...</div>\r\n        </div>\r\n    )\r\n}\r\n","import './modal.css';\r\n\r\n\r\n\r\nexport const Modal = ({children,modal = false,setModal,callback = ()=>{} })=>{\r\n\r\n    const closeWindow = ()=>{\r\n        setModal(false);\r\n        callback();\r\n    }\r\n\r\n    return(\r\n\r\n        modal\r\n\r\n        ?\r\n\r\n        <div className=\"modal-crow-main\">\r\n            <div className=\"modal-crow\">\r\n                <div className=\"modal-crow-contain\">\r\n                    {children}\r\n                </div>\r\n                <div className=\"modal-crow-footer\">\r\n                    <div className=\"modal-align-end\">\r\n                        <button type=\"button\" className=\"btn-modal btn-default-modal\" onClick={closeWindow/*()=>setModal(false)*/}> Salir</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        :\r\n\r\n        <></>\r\n\r\n    );\r\n}","//<Switch isOn={status} click={changeStatus}/>\r\n\r\nimport './Switch.css'\r\n\r\nexport const Switch = ({isOn,click})=>{\r\n    \r\n    return(\r\n        <span className={`slider-custome ${isOn ? 'checked' : '' }`}  onClick={click}>\r\n            <label className=\"switch\">\r\n                <span className=\"slider round\"></span>\r\n            </ label>\r\n        </span>\r\n    )\r\n}"],"names":["adminValidate","form","error","Object","keys","name","switchValidate","value","validateOnlyText","validateEmail","validatePhoneNumber","validateFreeText","trim","normalize","replace","match","infoSwal","title","capitalize","esp","required","expRegResp","toUpperCase","substring","ClubAdmin","root","focus","blur","changeGeneral","id","saveAdminRootFirstTime","style","padding","className","top","left","color","position","right","type","onChange","e","target","onDoubleClick","onFocus","onBlur","readOnly","disabledName","email","disabledEmail","number","disabledNumber","onClick","boxShadow","ClubCarpet","club","adress","img","status","disabledClub","disabledAdress","btnMoreInfo","deleteClub","changeImgClub","marginBottom","background","borderRadius","cursor","fontSize","opacity","width","alt","src","Switch","isOn","click","maxHeight","marginTop","rows","margin","imgClubDefault","AddClub","newClub","useState","imageCropper","setImageCropper","cropperRef","useRef","inputFile","setForm","onChangeInput","createImg","current","newImage","cropper","getCroppedCanvas","height","fillColor","toDataURL","fetch","then","temp","blob","File","mixinSwal","icon","saveForm","data","FormData","append","waitSwal","html","fetchCustome2","endpoint","method","body","resp","text","border","ref","initialAspectRatio","cropBoxResizable","dragMode","guides","viewMode","zoomTo","cropBoxMovable","toggleDragModeOnDblclick","preventDefault","file","files","test","toLowerCase","reader","FileReader","onload","result","readAsDataURL","display","EditLogoClub","editImage","updateClubs","modal","setModal","editButton","useEffect","updateImg","Modal","disabled","setContext","useContext","customeContext","load","clubs","setClubs","previusValue","isMounted","id2","updateInputsBooleans","forEach","applyMask","popertyReadOnly","isIdClubOrAdmin","updateInputs","updateInputFetch","label","json","console","log","val","maskPhone","find","filter","length","id_club","errors","getClubs","useCallback","map","addChar","quetionSwal2","isConfirmed","ClubsHook","setEditImage","context","titlePage","sort","a","b","Load2","children","callback"],"sourceRoot":""}