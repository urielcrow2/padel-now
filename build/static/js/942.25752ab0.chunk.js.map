{"version":3,"file":"static/js/942.25752ab0.chunk.js","mappings":"8MAEaA,EAAS,mCAAG,wGAEUC,UAAUC,cAAcC,SAAS,SAF3C,cAEfC,EAFe,gBAIIA,EAAiBC,YAAYC,kBAJjC,UAMA,QAFjBC,EAJiB,yCAQIH,EAAiBC,YAAYL,UAAW,CACzDQ,iBAAiB,EACjBC,qBAAsBC,4FAVT,OAQjBH,EARiB,OAajBI,QAAQC,IAAIL,GAEA,wBAENM,EAAU,CACZC,OAAO,OACPC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,MAAOZ,KAIfa,MAAOC,uCAAyBR,GA3Bf,4CAAH,qD,SCKhBS,GAAaC,EAAAA,EAAAA,OAAK,WAEpB,IAAQC,GAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BF,YAERG,EAAAA,EAAAA,YAAU,WACNH,GAAY,SAAAI,GAAO,yBACRA,GADQ,IAEXC,UAAY,gBAGtB,CAACL,KAEHG,EAAAA,EAAAA,YAAU,WACNhB,QAAQC,IAAI,mBACZD,QAAQC,IAAIkB,aAAaC,cAC1B,IAWH,OACI,gBAAKC,UAAU,eAAf,UACI,gBAAKA,UAAU,qBAAf,UACI,gBAAKA,UAAU,MAAf,UACI,gBAAKA,UAAU,iBAAf,UACI,gBAAKA,UAAU,OAAf,UACI,iBAAKA,UAAW,YAAhB,WAEI,eAAIA,UAAU,cAAd,qBACA,mBAAQA,UAAU,kBAAkBC,QAlBzC,WACnB,IAAIH,aAAa,OAAQ,CACrBd,KAAM,UACNkB,IAAK,kCAGTlC,KAYwB,oDAWhC","sources":["helpers/subscribe.js","componets/home/HomeScreen.js"],"sourcesContent":["\r\n\r\nexport const subscribe = async () => {\r\n\r\n    const serviceWorkerReg = await navigator.serviceWorker.register('sw.js');\r\n\r\n    let subscription = await serviceWorkerReg.pushManager.getSubscription();\r\n   \r\n    if (subscription === null) {\r\n\r\n        subscription = await serviceWorkerReg.pushManager.subscribe ({\r\n            userVisibleOnly: true,\r\n            applicationServerKey: process.env.REACT_APP_VAPID_PUBLIC_KEY,\r\n        });\r\n\r\n        console.log(subscription);\r\n\r\n        const url = 'http://localhost:9000';\r\n\r\n        const options = {\r\n            method:'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                token: subscription\r\n            })\r\n        }\r\n\r\n        fetch( url + '/notificaciones', options);\r\n    }\r\n}","import { useContext , memo, useEffect } from 'react';\nimport {customeContext} from '../../context/context';\nimport {subscribe} from '../../helpers/subscribe';\n\n\n\n\nconst HomeScreen = memo(() => {\n\n    const { setContext } = useContext(customeContext);\n\n    useEffect(() => {\n        setContext( context => (\n            {   ...context,\n                titlePage : 'Inicio'\n            })\n        );\n    },[setContext]);\n\n    useEffect(() => {\n        console.log('segun inscritos')\n        console.log(Notification.permission)\n    }, [])\n\n    const notificaciones = ()=>{\n        new Notification('holi', {\n            body: 'message',\n            tag: 'simple-push-demo-notification'\n          });\n\n        subscribe();\n    }\n\n    return (\n        <div className=\"main-content\">\n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 mt-3\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n\n                                <h4 className=\"text-center\">INICIO</h4>\n                                <button className=\"btn btn-success\" onClick={notificaciones}>Recibir notificaciones</button>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default HomeScreen;\n"],"names":["subscribe","navigator","serviceWorker","register","serviceWorkerReg","pushManager","getSubscription","subscription","userVisibleOnly","applicationServerKey","process","console","log","options","method","headers","body","JSON","stringify","token","fetch","url","HomeScreen","memo","setContext","useContext","customeContext","useEffect","context","titlePage","Notification","permission","className","onClick","tag"],"sourceRoot":""}