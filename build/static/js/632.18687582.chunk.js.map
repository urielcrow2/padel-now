{"version":3,"file":"static/js/632.18687582.chunk.js","mappings":"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","sources":["componets/admins/AdminCarpet.js","componets/admins/AdminAdd.js","componets/admins/AdminsScreen.js","componets/admins/AdminHook.js","componets/admins/adminValidate.js","componets/utils/load2/Load2.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["\r\n\r\nexport const AdminCarpet = ({\r\n    id,\r\n    name,\r\n    email,\r\n    number,\r\n    img,\r\n    disabledName,\r\n    disabledEmail,\r\n    disabledNumber,\r\n    deleteAdmin,\r\n    changeGeneral,\r\n    focus,\r\n    blur\r\n})=>{\r\n    return(\r\n            <div className=\"col-md-4\" style={{marginBottom:50}}>\r\n                <div style={{\r\n                    background:\"#fff\",\r\n                    padding:10,\r\n                    borderRadius:6,\r\n                    position:\"relative\",\r\n                    boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.52)\"\r\n                    }}>\r\n\r\n                    <div style={{position:\"absolute\",top:-40,left:20}}><img style={{width:'70px',marginBottom:'10px',borderRadius:\"50%\",boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.52)\"}} alt=\"avatar\" src={img} /></div>\r\n                    \r\n                    <div className=\"d-flex justify-content-end mt-4 position-relative\">\r\n                        <span className=\"position-absolute\" style={{top:2,left:20,color:\"#CCC\"}}>Nombre</span>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control mt-4 text-uppercase\" \r\n                            value={name ? name : \"\"} \r\n                            onChange={(e)=>changeGeneral(e.target.name,e.target.value,id)} \r\n                            onDoubleClick={()=>changeGeneral(\"disabledName\",false,id)} \r\n                            onFocus={(e)=>focus(e)} \r\n                            onBlur = {(e)=>blur(e,'disabledName',id)}\r\n                            readOnly={disabledName}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"d-flex justify-content-end position-relative\">\r\n                        <span className=\"position-absolute\" style={{top:2,left:20,color:\"#CCC\"}}>E-mail</span>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"email\"\r\n                            className=\"form-control mt-4 text-lowercase\" \r\n                            value={email ? email : \"\"} \r\n                            onChange={(e)=>changeGeneral(e.target.name,e.target.value,id)} \r\n                            onDoubleClick={()=>changeGeneral(\"disabledEmail\",false,id)} \r\n                            onFocus={(e)=>focus(e)} \r\n                            onBlur = {(e)=>blur(e,'disabledEmail',id)}\r\n                            readOnly={disabledEmail}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end align-items-center position-relative\">\r\n                        <span className=\"position-absolute\" style={{top:2,left:20,color:\"#CCC\"}}>Teléfono</span>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"number\"\r\n                            className=\"form-control mb-2 mt-4\" \r\n                            value={number ? number : \"\"} \r\n                            onChange={(e)=>changeGeneral(e.target.name,e.target.value,id)} \r\n                            onDoubleClick={()=>changeGeneral(\"disabledNumber\",false,id)} \r\n                            onFocus={(e)=>focus(e)} \r\n                            onBlur = {(e)=>blur(e,'disabledNumber',id)}\r\n                            readOnly={disabledNumber}\r\n                        />\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-outline-danger\" \r\n                            style={{marginLeft:5,marginTop:5}}\r\n                            onClick={()=>deleteAdmin(name,img,id)}>\r\n                            <i className=\"fa fa-trash fa-2x\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                    \r\n\r\n                   \r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import {useState} from 'react';\r\nimport {waitSwal,mixinSwal,infoSwal} from '../utils/swalCustome';\r\nimport {maskPhone,addChar} from '../../helpers/miselanius';\r\nimport {adminValidate} from './adminValidate';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\nexport const AdminAdd = ({setUsers,users})=>{\r\n\r\n    const [form,setForm] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        number:\"\"\r\n    });\r\n \r\n    const onChangeInput = (e) =>{\r\n\r\n        let temp = \"\";\r\n\r\n        if(e.target.name === \"number\")\r\n            temp = maskPhone(e.target.value);\r\n        else\r\n            temp = e.target.value;\r\n\r\n        setForm({\r\n            ...form,\r\n            [e.target.name] : temp\r\n        })\r\n\r\n    }\r\n\r\n    const newUser = (newUser) =>{\r\n\r\n        const temp = [\r\n            ...users.data,\r\n            newUser\r\n        ];\r\n\r\n        temp.sort((a,b) => {\r\n            if(a.name > b.name)\r\n                return 1;\r\n            if(a.name < b.name)\r\n                return -1;\r\n            return 0;\r\n        })\r\n\r\n        setUsers({\r\n            ...users,\r\n            data:temp\r\n        })\r\n    }\r\n\r\n    const saveForm = async() => {\r\n\r\n            if(adminValidate(form))\r\n                return\r\n\r\n            const correoExistente = users.data.filter( user => user.email === form.email)\r\n           \r\n            if( correoExistente.length !== 0 ){\r\n                infoSwal({title: 'E-mail ya existe'});\r\n                return true;\r\n            }\r\n           \r\n            const body = {\r\n                name:form.name.trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"),\r\n                email:form.email.trim(),\r\n                number:form.number.replace(/[-]/g,'')\r\n            }\r\n\r\n        \r\n            waitSwal({html:'Espere..'});\r\n\r\n            try{\r\n    \r\n                const resp = await fetchCustome2({ \r\n                    endpoint : '/users/admin',\r\n                    method :'POST',\r\n                    body,\r\n                    json:true\r\n                });\r\n\r\n              \r\n                if(resp.errors){\r\n                    if(resp.errors.email){\r\n                        infoSwal({\r\n                            icon: 'error',\r\n                            title: 'Ocurrio un error',\r\n                            text: `Ya existe un usuario con ese e-mail`\r\n                        });\r\n                        return;\r\n                    }\r\n                    infoSwal({\r\n                        icon: 'error',\r\n                        title: 'Ocurrio un error',\r\n                        text: `Error de comunicación con el servidor, intentelo más tarde`\r\n                    });\r\n                    return;\r\n                }\r\n                else if(resp !== \"\"){\r\n                    mixinSwal({ icon: 'success',title: `Administrador resgistrado`});\r\n                    \r\n                        newUser({\r\n                            id:resp.id,\r\n                            name:resp.name,\r\n                            email:resp.email,\r\n                            number:addChar(resp.number,'-',2),\r\n                            img:\"https://padelnow.app/padel/assets/no-image.jpg\",\r\n                            disabledName:true,\r\n                            disabledEmail:true,\r\n                            disabledNumber:true\r\n                        })\r\n\r\n                        setForm({\r\n                            name:\"\",\r\n                            email:\"\",\r\n                            number:\"\"\r\n                        });\r\n                }\r\n                else{\r\n                        infoSwal({\r\n                            icon: 'error',\r\n                            title: 'Ocurrio un error',\r\n                            text: `Error de comunicación con el servidor, intentelo más tarde` ,\r\n                        });\r\n                }\r\n    \r\n            }\r\n            catch(e){\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunicación con el servidor, intentelo más tarde` ,\r\n                });\r\n            }\r\n            \r\n        \r\n    };\r\n\r\n    return(\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col-md-4 col-xs-12 mt-3 position-relative\">\r\n                <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Nombre</span>\r\n                <span style={{position:\"absolute\",top:-12,right:25,color:\"#00a65a\"}}><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></span>\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={onChangeInput} \r\n                    name=\"name\" \r\n                    className=\"form-control text-uppercase\" \r\n                    value={form.name}\r\n                />  \r\n            </div>\r\n\r\n            <div className=\"col-md-4 col-xs-12 mt-3 text-lowercase position-relative\">\r\n                <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>E-mail</span>\r\n                <span style={{position:\"absolute\",top:-12,right:25,color:\"#00a65a\"}}><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></span>\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={onChangeInput} \r\n                    name=\"email\" \r\n                    className=\"form-control text-lowercase\" \r\n                    value={form.email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-md-4 col-xs-12 mt-3 position-relative\">\r\n                <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Teléfono</span>\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={onChangeInput} \r\n                    name=\"number\" \r\n                    className=\"form-control\" \r\n                    value={form.number}\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"col-12 mt-3 d-flex justify-content-end\">\r\n                <button type=\"button\" className=\"btn btn btn-outline-primary\" onClick={saveForm} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useEffect,useContext} from 'react';\r\nimport {customeContext} from '../../context/context';\r\nimport {AdminCarpet} from './AdminCarpet';\r\nimport {AdminAdd} from './AdminAdd';\r\nimport {Load2} from '../utils/load2/Load2';\r\nimport {AdminHook} from './AdminHook';\r\n\r\n\r\nconst AdminsScreen = ()=>{\r\n    const { setContext } = useContext(customeContext);\r\n    const {\r\n        users,\r\n        setUsers,\r\n        changeGeneral,\r\n        focus,\r\n        blur,\r\n        deleteAdmin\r\n    } = AdminHook();\r\n\r\n\r\n    useEffect(() => {\r\n        setContext( context => (\r\n            {   ...context,\r\n                titlePage : 'Super Administradores'\r\n            })\r\n        );\r\n    },[setContext]);\r\n\r\n    return(\r\n        <div className=\"main-content\">\r\n\r\n\r\n            <div className=\"main-content-inner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                        <div className=\"card\">\r\n                            <div className =\"card-body\">\r\n\r\n                                <AdminAdd setUsers={setUsers} users={users}/>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"main-content-inner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"card\">\r\n                            <div className =\"card-body\">\r\n                                <div className=\"row\">\r\n                                    {\r\n\r\n                                        users.load ?\r\n\r\n                                        <Load2 /> : \r\n\r\n                                        users.data.map(e=>{\r\n                                            return(\r\n                                                <AdminCarpet \r\n                                                    key={e.id} \r\n                                                    changeGeneral={changeGeneral}\r\n                                                    blur={blur}\r\n                                                    focus={focus}\r\n                                                    deleteAdmin={deleteAdmin}\r\n                                                    {...e}\r\n                                                />\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                </div>\r\n            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminsScreen;","import {useState,useRef,useEffect,useCallback} from 'react';\r\nimport {waitSwal,mixinSwal,infoSwal,quetionSwal} from '../utils/swalCustome';\r\nimport {addChar,maskPhone} from '../../helpers/miselanius';\r\nimport {switchValidate} from './adminValidate';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\n\r\nexport const AdminHook = ()=>{\r\n\r\n    const [users,setUsers] = useState({\r\n        load : true,\r\n        data : []\r\n    });\r\n\r\n    const previusValue = useRef(null);\r\n\r\n    const isMounted = useRef(true);\r\n\r\n   \r\n    const changeGeneral = (name,value,id)=>{\r\n\r\n        //se manadan a actualizar al backend únicamente los campos boolean (como los check)\r\n        // if(updateInputsBooleans(name,value,id ))\r\n        //     return;\r\n\r\n        const temp = [...users.data];\r\n        temp.forEach(user=>{\r\n            if(user.id === id)\r\n                user[name] = applyMask(name,value);\r\n        });\r\n\r\n        setUsers({\r\n            ...users,\r\n            data:temp\r\n        });\r\n    }\r\n    \r\n\r\n    //#region Aplicamos mascaras a los campos que lo necesiten\r\n    const applyMask = (name,value)=>{\r\n        switch(name){\r\n            case 'number':\r\n                return maskPhone(value);\r\n            default:\r\n                return value;\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    const focus = (e)=>{//Guardamos el valor previo para saber si hubo cambios y mandar al backend o no\r\n        previusValue.current = e.target.value.trim(); \r\n    }\r\n\r\n    const blur = async(e,popertyReadOnly,id)=>{//actualizamos los campos de texto\r\n\r\n        if(previusValue.current !== e.target.value){\r\n            if(switchValidate(e.target.name, e.target.value))//validamos que el formato del campo cumpla con la validación\r\n                changeGeneral(e.target.name,previusValue.current,id)//Regresamos el valor anterior\r\n            else if(await updateField(e.target.name,e.target.value,id))//Esperamos la respuesta del backend)\r\n                changeGeneral(e.target.name,previusValue.current,id)//Regresamos el valor anterior \r\n        }\r\n        changeGeneral(popertyReadOnly,true,id)//desactivamos el campo que se actualizó\r\n    }\r\n\r\n    const updateField = async (name,value,id)=>{\r\n\r\n        let label = '';\r\n        let tempValue = value;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                label = \"el nombre\"\r\n            break;\r\n            case 'number':\r\n                label = \"el teléfono\"\r\n                tempValue = value.replace(/[-]/g,'');\r\n            break;\r\n            case 'number':\r\n                label = \"el e-mail\"\r\n            break;\r\n        \r\n            default:\r\n            break;\r\n        }\r\n\r\n        waitSwal({html:`Actualizando ${label}`});\r\n\r\n        const body = {\r\n            id,\r\n            [name] : tempValue\r\n        }\r\n\r\n        try{\r\n            const resp = await fetchCustome2({ \r\n                endpoint : '/users',\r\n                method : 'PATCH',\r\n                body,\r\n                json:true\r\n            });\r\n\r\n            if(resp.errors.email){\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Ya existe un usuario con ese e-mail`\r\n                });\r\n                return true;\r\n            }\r\n           else if(resp.id){\r\n                mixinSwal({ icon: 'success',title: `${label} actualizado`});\r\n                return false;\r\n           }\r\n           else{\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunicación con el servidor, intentelo más tarde` ,\r\n                });\r\n                return true;\r\n           }\r\n        }\r\n        catch(e){\r\n            infoSwal({\r\n                icon: 'error',\r\n                title: 'Ocurrio un error',\r\n                text: `Error de comunicación con el servidor, intentelo más tarde` ,\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n\r\n    //#region Verificamos que sólo se mande a actualizar los campos booleans, por ejemplos checks inputs\r\n    // const updateInputsBooleans = (name,value,id)=>{\r\n    //     switch (name) {\r\n    //         case 'status':\r\n    //             return updateField('status',value,id);\r\n    //         default:\r\n    //             return false;\r\n    //     }    \r\n    // }\r\n    //#endregion\r\n\r\n    const deleteAdmin = (name,img,id)=>{\r\n\r\n        quetionSwal(name,img,async(resp)=>{\r\n            if(resp.isConfirmed){\r\n               \r\n                waitSwal({html:`Eliminando...`});\r\n\r\n                try{\r\n                    await fetchCustome2({ \r\n                        endpoint : `/users/admin/${id}`,\r\n                        method : 'DELETE',\r\n                    });\r\n\r\n                    setUsers({\r\n                       ...users,\r\n                        data: users.data.filter( user => user.id !== id)\r\n                    });\r\n\r\n                    mixinSwal({ icon: 'success',title: `Usuario eliminado`});\r\n                }\r\n                catch(e){\r\n                    infoSwal({\r\n                        icon: 'error',\r\n                        title: 'Ocurrio un error',\r\n                        text: `Error de comunicación con el servidor, intentelo más tarde` ,\r\n                    });\r\n                }\r\n            } \r\n        });\r\n    }\r\n\r\n    const getUsers = useCallback(async()=>{\r\n        \r\n        let resp = await fetchCustome2( { endpoint : `/users/admins` } );\r\n\r\n        if(!isMounted.current)\r\n        return;\r\n\r\n        resp = resp.map(user => {\r\n            return{\r\n                ...user,\r\n                number:addChar(user.number,'-',2),\r\n                disabledName: true,//Añadimos nuestras propiedades para controlar los inputs para actualizar\r\n                disabledEmail: true,//Añadimos nuestras propiedades para controlar los inputs para actualizar\r\n                disabledNumber: true,//Añadimos nuestras propiedades para controlar los inputs para actualizar\r\n            }\r\n        });\r\n\r\n        setUsers({\r\n            load:false,\r\n            data:resp\r\n        });\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        getUsers();\r\n    },[getUsers]);\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    },[]);\r\n\r\n\r\n    return {\r\n        users,\r\n        setUsers,\r\n        changeGeneral,\r\n        focus,\r\n        blur,\r\n        deleteAdmin\r\n    }\r\n\r\n}","\r\nimport {infoSwal} from '../utils/swalCustome';\r\n\r\nexport const adminValidate = (form)=>{\r\n\r\n    let error = false;\r\n    const temp = Object.keys(form);\r\n\r\n    for(const name of temp){\r\n        if(switchValidate(name,form[name])){\r\n            error = true;\r\n            break;\r\n        }\r\n    }\r\n    return error;\r\n}\r\n\r\nexport const switchValidate = (name,value)=>{\r\n    switch(name){\r\n        case 'name':\r\n            return validateOnlyText(name,value);\r\n        case 'email':\r\n            return validateEmail(value);\r\n        case 'number':\r\n            return validatePhoneNumber(value);\r\n        case 'club':\r\n            return validateFreeText(name,value,true);\r\n        case 'adress':\r\n            return validateFreeText(name,value,false);\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nconst validateOnlyText = (name,value)=>{\r\n    if(value.trim() === \"\" || !value.trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").match(/^[a-zA-Z\\s]+$/)){\r\n        infoSwal({title: `${capitalize(esp[name] || name)} es obligatorio y debe tener solo letras y espacios`});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst validateFreeText = (name,value,required)=>{ \r\n\r\n    const expRegResp = (value.trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").match(/[<>\"\\'&]+/));\r\n\r\n    if( required && (value.trim() === \"\" || expRegResp) ){\r\n        infoSwal({title: `${capitalize( esp[name] || name )} es obligatorio y no debe tener caracteres especiales`});\r\n        return true;\r\n    }\r\n\r\n    if(value.trim() !== \"\" && expRegResp){\r\n        infoSwal({title: `${capitalize( esp[name] || name )} No debe tener caracteres especiales`});\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nconst validateEmail = (value)=>{\r\n    if( value.trim() === \"\" || !value.trim().match(/^([a-zA-Z0-9_\\-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9-]+\\.)+))([a-zA-Z]{1,5}|[0-9]{1,3})(\\]?)$/)){\r\n        infoSwal({title: 'E-mail es obligatorio y debe ser valido'});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst validatePhoneNumber = (value)=>{\r\n    if(value !== \"\" && !value.trim().match(/^[0-9-]{14}$/)){\r\n        infoSwal({title: 'Teléfono a 10 digitos'});\r\n        return true;\r\n    }\r\n}\r\n\r\nconst esp = {\r\n    'name' : 'nombre',\r\n    'club' : 'nombre del club',\r\n    'adress' : 'dirección'\r\n}\r\n\r\nconst capitalize = name => name[0].toUpperCase() + name.substring(1);\r\n","import React from 'react';\r\nimport './load2.css';\r\n\r\nexport const Load2 = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <div className=\"loader\"></div>\r\n            <div className=\"text-loader\">Cargando...</div>\r\n        </div>\r\n    )\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["AdminCarpet","id","name","email","number","img","disabledName","disabledEmail","disabledNumber","deleteAdmin","changeGeneral","focus","blur","className","style","marginBottom","background","padding","borderRadius","position","boxShadow","top","left","width","alt","src","color","type","value","onChange","e","target","onDoubleClick","onFocus","onBlur","readOnly","marginLeft","marginTop","onClick","AdminAdd","setUsers","users","useState","form","setForm","onChangeInput","temp","maskPhone","newUser","data","sort","a","b","saveForm","adminValidate","filter","user","length","infoSwal","title","body","trim","normalize","replace","waitSwal","html","fetchCustome2","endpoint","method","json","resp","errors","icon","text","mixinSwal","addChar","right","setContext","useContext","customeContext","load","previusValue","useRef","isMounted","forEach","applyMask","popertyReadOnly","current","switchValidate","updateField","label","tempValue","getUsers","useCallback","map","useEffect","quetionSwal","isConfirmed","AdminHook","context","titlePage","Load2","error","Object","keys","validateOnlyText","validateEmail","validatePhoneNumber","validateFreeText","match","capitalize","esp","required","expRegResp","toUpperCase","substring","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}