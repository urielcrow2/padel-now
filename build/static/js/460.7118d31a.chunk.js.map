{"version":3,"file":"static/js/460.7118d31a.chunk.js","mappings":"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","sources":["componets/perfil/PerfilScreen.js"],"sourcesContent":["import {useContext , useEffect , useState, useRef} from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport Cropper from \"react-cropper\";\nimport { updateImg } from '../../actions';\nimport {GetListTournamentHook} from '../time/GetListTournamentHook';\nimport {customeContext} from '../../context/context';\nimport {GetListTableUserHook} from './GetListTableUserHook';\nimport {Load2} from '../utils/load2/Load2';\nimport {waitSwal,mixinSwal,infoSwal,closeSwal} from '../utils/swalCustome';\nimport {fetchCustome2} from \"../../helpers/fetch\";\nimport {PerfilData} from './PerfilData'\nimport {PerfilClubsGestionComponent} from './PerfilClubsGestionComponent';\nimport {ButtonFloat} from '../utils/buttonFloat/ButtonFloatComponent';\n  /*********************Controlamos la lista de clubs*********************/\nimport {PerfilClubComponent,PerfilClubComponentCarpet} from './PerfilClubComponent';\nimport {PerfilClubsHook} from './PerfilClubsHook';\n\nimport \"cropperjs/dist/cropper.css\";\n\nconst PerfilScreen = ()=>{\n\n    const {image} = useSelector( store => store.auth );\n    const dispatch = useDispatch();\n    const { setContext } = useContext(customeContext);\n\n    /*********************Controlamos la lista de clubs*********************/\n    const {clubs,setClubs,onChangeClub,idClub} = PerfilClubsHook();\n\n\n /*********************Controlamos la lista torneos*********************/\n    const {listTournaments} = GetListTournamentHook(idClub);\n    \n\n\n    const [idTournament,setIdTournament] = useState(0);\n    const {data} = GetListTableUserHook(idTournament);\n\n\n    const [imageCropper, setImageCropper] = useState(image);\n    const cropperRef = useRef();\n    const inputFile = useRef(null);\n    const [toggleBtnSaveImg,setToggleBtnSaveImg] = useState(true);\n\n    //Controlamos la apertura o cierre de la ventana modal\n    const [modalGestionClubs,setModalGestionClubs] = useState(false);\n\n\n    const [formPass,setFormPass] = useState({\n        pass:\"\",\n        pass2:\"\"\n    });\n\n    const [input, setInput] = useState({\n        type:'password',\n        check:'fa-square color-disabled-check'\n    });\n\n    const isMounted = useRef(false);\n\n    useEffect(() => {\n        setContext( context => (\n            {   ...context,\n                titlePage : 'Mis datos'\n            })\n        );\n    },[setContext]);\n\n    //#region Controlamos las ventas que indican la carga de datos\n    useEffect(() => {\n        if(isMounted.current)\n            waitSwal({html:'Cargando lista de torneos'});\n    },[idClub]);\n    useEffect(() => {\n        if(isMounted.current)\n            closeSwal();\n    },[listTournaments.list]);\n    useEffect(() => {\n        if(isMounted.current)\n            closeSwal();\n        else\n            isMounted.current = true;\n    },[data.load]);\n\n    \n\n    const changeType = (val)=>{\n        let [type,check] = ['password','fa-square color-disabled-check'];\n        \n        if(val === 'password'){\n            type = 'text';\n            check = 'fa-check-square color-enabled-check';\n        }\n\n        setInput({\n            type,\n            check\n        });\n    }\n\n    const onChangeTournament = (e)=>{\n        if(parseInt(e.target.value) === 0)\n            return;\n        //cada que cambiamos de torneo\n        waitSwal({html:'Cargando torneo'});\n        setIdTournament(e.target.value);\n    }\n\n    const onUpdatePass = async()=>{\n\n        const {pass,pass2} = formPass;\n\n        if(pass !== pass2){\n            return infoSwal({\n                icon: 'info',\n                title: 'Contraseñas incorrectas',\n                text: `La contraseña y la confirmación deben ser identicas` ,\n            });\n        }\n\n        if(!pass.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?_.])[A-Za-z\\d@$!%*?_.]{10,15}$/)){\n            return infoSwal({\n                icon: 'info',\n                title: 'Contraseña debil',\n                text: `La contraseña debe de tener mínimo 10 y máximo 15 caracteres; al menos 1 número,1 mínuscula, 1 máyuscula y alguno de los siguientes caracteres especiales @ $ ! % * ? . _` ,\n            });\n        }\n\n         waitSwal({html:'Actualizando contraseña'});\n            try{\n    \n                await fetchCustome2({ \n                    endpoint : '/perfil/passwd',\n                    method :'PATCH',\n                    body:{\n                        'passwd':pass\n                    },\n                    json:true\n                });\n    \n                setFormPass({\n                    pass:\"\",\n                    pass2:\"\"\n                })\n\n                mixinSwal({ icon: 'success',title: `La contraseña se actualizó correctamente`});\n    \n            }\n            catch(e){\n                infoSwal({\n                    icon: 'error',\n                    title: 'Ocurrio un error',\n                    text: `Error de comunucación con el servidor, intentelo más tarde` ,\n                });\n            }\n\n    }\n\n    const onChange = (e) => {\n        e.preventDefault();\n        let file = e.target.files[0];\n        if (/\\.(?=jpg|jpeg)/gi.test(file.name.toLowerCase())) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setToggleBtnSaveImg(false);\n                setImageCropper(reader.result);\n                inputFile.current.value = \"\";\n            };\n            reader.readAsDataURL(file);\n        }\n        else{\n            return infoSwal({\n                icon: 'info',\n                title: 'Formato de imagen inválido',\n                text: `Sólo se permiten imagenes jpg o jpeg` ,\n            });\n        }\n    };\n      \n    const clickInputFile = ()=>{\n        inputFile.current.click()\n    }\n    \n    const getCropData = async() => {\n\n        if (typeof cropperRef.current !== \"undefined\") {\n            const newImage = cropperRef.current.cropper.getCroppedCanvas({\n                width: 512,//podemos establecer un tamaño fijo en la imagen final en este caso manejamos la relación 16 / 9\n                height: 512,\n                fillColor: '#fff'\n            })\n            .toDataURL(\"image/jpeg\",0.7);//bajamos la calidad para disminuir considerablemente el peso sin afectar la calidad\n\n            const blob = await fetch(newImage).then(temp => temp.blob());//con la imagen resultante creamos un blob\n            const temp = new File([blob], \"temporal.jpg\", {type: blob.type});//hecho el blob creamos el archivo\n\n\n            const form = new FormData();\n            form.append(\"img\",temp);\n            form.append(\"_method\",'patch');\n\n\n            waitSwal({html:'Actualizando imagen'});\n\n            try{\n    \n                const resp = await fetchCustome2({ \n                    endpoint : '/perfil/avatar',\n                    method :'POST',\n                    body:form\n                });\n    \n               if(resp !== \"\"){\n                   mixinSwal({ icon: 'success',title: `La imagen se actualizó correctamente`});\n                   setToggleBtnSaveImg(true);\n                   setImageCropper(resp);\n                   dispatch(updateImg(resp));\n               }\n               else{\n                    infoSwal({\n                        icon: 'error',\n                        title: 'Ocurrio un error',\n                        text: `Error de comunucación con el servidor, intentelo más tarde` ,\n                    });\n               }\n    \n            }\n            catch(e){\n                infoSwal({\n                    icon: 'error',\n                    title: 'Ocurrio un error',\n                    text: `Error de comunucación con el servidor, intentelo más tarde` ,\n                });\n            }\n            \n        }\n    };\n\n    return(\n        <div className=\"main-content\">\n\n\n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 mt-3\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <div style={{width:'87%'}}>\n                                        <PerfilClubComponent clubs={clubs} onChangeClub={onChangeClub}/>\n                                    </div>\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={()=>setModalGestionClubs(true)}><i className=\"fa fa-shield\" aria-hidden=\"true\"></i></button>\n                                </div>\n                                <PerfilClubComponentCarpet clubs={clubs} idClub = {idClub}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {\n                (modalGestionClubs && !clubs.load)\n                 \n                &&\n\n               <PerfilClubsGestionComponent \n                clubs = {clubs}\n                setClubs = {setClubs}\n                modalGestionClubs ={modalGestionClubs} \n                setModalGestionClubs = {setModalGestionClubs}\n                />\n            }\n\n            \n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n\n                                <div className=\"row\">\n\n                                    <div className=\"col-12 mb-5\" style={{position:\"relative\"}}>\n                                        <span style={{position:\"absolute\",top:-21,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Selecciona un torneo</span>\n                                        <div className=\"d-flex justify-content-between\">\n                                            \n                                            <select className=\"form-control text-uppercase\" onChange={onChangeTournament} disabled={listTournaments.load} value={idTournament}>\n                                                {\n                                                    \n                                                    listTournaments.load ?\n\n                                                    <option disabled value=\"0\">\n                                                        ...\n                                                    </option>:\n\n                                                    listTournaments.list.map(item=>(\n                                                        <option value={item.id} key={item.id} >{item.name}</option>\n                                                    ))\n                                                }\n                                                \n                                            </select>\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-md-6 col-xs-12 mt-3 text-center\">\n                                        {\n                                            data.load ?\n\n                                            // <Load2 className=\"mt-5\"/> :\n                                            <></>:\n\n                                            <>\n                                                <h4 className=\"text-center\">Próximo juego</h4>\n                                                <h5 className=\"text-center\">{data.nextGame.date} </h5>\n                                                <hr />\n                                                <div className=\"row\">\n                                                    <h1 className=\"text-center\">Cancha {data.nextGame.curt} <span className=\"badge bg-secondary\">{data.nextGame.time && data.nextGame.time.slice(0,5)}  hrs.</span></h1>\n                                                </div>\n                                            </>\n                                        }\n                                    </div>\n                                    <div className=\"col-md-6 col-xs-12 mt-3 text-center\">\n                                        {\n                                            data.load ?\n\n                                            // <Load2 className=\"mt-5\"/> :\n                                            <></>:\n\n                                            <>\n                                                <h4>Ranking: </h4>\n                                                <span className=\"badge bg-secondary\" style={{fontSize:40,marginTop:10}}> {data.ranking} </span>\n                                            </>\n\n                                        }\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n                                <div className=\"row\">\n\n                                    {\n                                        data.load ?\n\n                                        //<Load2 className=\"mt-5\"/> :\n                                        <></>:\n\n                                        <table className=\"table\">\n                                            <thead className=\"table-dark\">\n                                            <tr>\n                                                <th scope=\"col\">Jornada</th>\n                                                <th scope=\"col\">Set 1</th>\n                                                <th scope=\"col\">Set 2</th>\n                                                <th scope=\"col\">Set 3</th>\n                                                <th scope=\"col\">Total</th>\n                                                <th scope=\"col\">Ranking</th>\n                                                <th scope=\"col\">Cancha</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    data.journals.map(journal=>(\n                                                        <tr key={journal.journal}>\n                                                            <th scope=\"row\">{journal.journal}</th>\n                                                            <td>{journal.set1}</td>\n                                                            <td>{journal.set2}</td>\n                                                            <td>{journal.set3}</td>\n                                                            <td>{journal.pointsGeneral}</td>\n                                                            <td>{journal.positionGeneral}</td>\n                                                            <td>{journal.court}</td>\n                                                        </tr>\n                                                    ))\n                                                }\n\n                                            </tbody>\n                                        </table>\n                                    }\n\n\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n                                <div className=\"row\">\n\n                                    <div className=\"col-md-12 col-xs-12 mt-1 mb-5 text-center\">\n                                        <h5>Actualiza tus datos</h5>\n                                    </div>\n\n                                    {\n                                        clubs.load \n                                        ?\n                                        <Load2 />\n                                        :\n                                        <PerfilData {...clubs.user}/>\n\n                                    }\n\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n            \n                    <div className=\"col-md-6 col-sm-12\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-12 col-xs-12 mt-1 mb-3 text-center\">\n                                        <h5>Actualiza tu imagen</h5>\n                                    </div>\n                                    <div className=\"col-md-12 col-xs-12 mt-2 d-flex justify-content-center\">\n                                       <div className=\"position-relative\" style={{width:220,border:'2px dashed',padding:8,cursor:'pointer'}}>\n                                            <Cropper\n                                                ref={cropperRef}\n                                                src={imageCropper}\n                                                style={{ maxHeight: 200,width: 200}}\n                                                initialAspectRatio={1}\n                                                cropBoxResizable={false}\n                                                dragMode = 'move'\n                                                guides={false}\n                                                viewMode={1}\n                                                zoomTo={0.2}\n                                                cropBoxMovable={false}\n                                                toggleDragModeOnDblclick={false}\n                                            />\n                                            <i className=\"fa fa-2x fa-picture-o position-absolute\" onClick={clickInputFile} style={{top:-20,right:-15,color:'#fff',background:'rgb(9, 139, 206)',padding:12,borderRadius:50}} aria-hidden=\"true\"></i>\n                                            <input ref={inputFile} type=\"file\" onChange={onChange} style={{display:'none'}}/>\n                                       </div>\n                                    </div>\n                                    <div className=\"col-12 mt-4 mb-2 d-flex justify-content-center\">\n                                        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={getCropData} disabled={toggleBtnSaveImg} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}}> Actualizar</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-6 col-sm-12\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-12 col-xs-12 mt-1 mb-5 text-center\">\n                                        <h5>Actualiza tu contraseña</h5>\n                                    </div>\n                                    <div className=\"col-md-12 col-xs-12 mt-3 text-center\">\n                                        <div style={{position:\"relative\"}}>\n                                            <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Nueva contraseña</span>\n                                            <input \n                                                type={input.type} \n                                                className=\"form-control\" \n                                                onChange={(e)=>setFormPass(value=>({\n                                                    ...value,\n                                                    pass:e.target.value.trim()\n                                                }))} \n                                                value={formPass.pass}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-xs-12 mt-3 text-center\">\n                                        <div style={{position:\"relative\"}}>\n                                            <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Repite la nueva contraseña</span>\n                                            <input  \n                                                type={input.type} \n                                                className=\"form-control\" \n                                                onChange={(e)=>setFormPass(value=>({\n                                                    ...value,\n                                                    pass2:e.target.value.trim()\n                                                }))} \n                                                value={formPass.pass2}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12 mt-4 mb-2\">\n                                        <div style={{position:'absolute',cursor:'pointer',zIndex:3}} onClick={()=>changeType(input.type)}>\n                                            <i className={`fa ${input.check} fa-2x me-1`} style={{cursor:'pointer'}}></i>\n                                            <label className=\"custom-control-label ml-3\" style={{cursor:'pointer'}}>Mostrar</label>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12 mt-2 mb-5 d-flex justify-content-end\">\n                                        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={onUpdatePass} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}}> Actualizar</button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n             <ButtonFloat hight={200}/>\n\n\n        </div>\n    );\n}\n\nexport default PerfilScreen;"],"names":["image","useSelector","store","auth","dispatch","useDispatch","setContext","useContext","customeContext","PerfilClubsHook","clubs","setClubs","onChangeClub","idClub","listTournaments","GetListTournamentHook","useState","idTournament","setIdTournament","data","GetListTableUserHook","imageCropper","setImageCropper","cropperRef","useRef","inputFile","toggleBtnSaveImg","setToggleBtnSaveImg","modalGestionClubs","setModalGestionClubs","pass","pass2","formPass","setFormPass","type","check","input","setInput","isMounted","useEffect","context","titlePage","current","waitSwal","html","closeSwal","list","load","onUpdatePass","infoSwal","icon","title","text","match","fetchCustome2","endpoint","method","body","json","mixinSwal","getCropData","newImage","cropper","getCroppedCanvas","width","height","fillColor","toDataURL","fetch","then","temp","blob","File","form","FormData","append","resp","updateImg","className","style","onClick","position","top","left","background","padding","color","onChange","e","parseInt","target","value","disabled","map","item","id","name","nextGame","date","curt","time","slice","fontSize","marginTop","ranking","scope","journals","journal","set1","set2","set3","pointsGeneral","positionGeneral","court","user","border","cursor","ref","src","maxHeight","initialAspectRatio","cropBoxResizable","dragMode","guides","viewMode","zoomTo","cropBoxMovable","toggleDragModeOnDblclick","click","right","borderRadius","preventDefault","file","files","test","toLowerCase","reader","FileReader","onload","result","readAsDataURL","display","boxShadow","trim","zIndex","val","changeType","hight"],"sourceRoot":""}