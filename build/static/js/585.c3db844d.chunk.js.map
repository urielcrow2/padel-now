{"version":3,"file":"static/js/585.c3db844d.chunk.js","mappings":"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","sources":["componets/perfil/PerfilClubsHook.js","componets/time/GetListTournamentHook.js","componets/time/TimeScreen.js"],"sourcesContent":["import {useState,useCallback,useEffect,useRef} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\nimport {addChar} from '../../helpers/miselanius';\r\n\r\n\r\nexport const PerfilClubsHook = (id)=>{\r\n\r\n    const [clubs, setClubs] = useState({\r\n        load:true,\r\n        list:[],\r\n        list2:[],\r\n        user:{}\r\n    });\r\n\r\n\r\n    const[idClub,setIdClub] = useState(0);\r\n\r\n    const isMounted = useRef(true);\r\n  \r\n    const getListClubs = useCallback(async()=>{\r\n\r\n        try{\r\n            let resp = await fetchCustome2( { endpoint : `/clubs/list` } );\r\n\r\n            if(!isMounted.current)\r\n                return;\r\n\r\n                console.log(resp)\r\n\r\n            setClubs({\r\n                load:false,\r\n                list:[\r\n                    {\r\n                        id:0,\r\n                        name:'Selecciona un club',\r\n                        img:'',\r\n                        number:'',\r\n                        email:''\r\n                    },\r\n                    ...resp.clubs\r\n                ],\r\n                list2:resp.clubs2,\r\n                user:{\r\n                    ...resp.user,\r\n                    number: addChar(resp.user.number,'-',2)\r\n                }\r\n            });\r\n        }\r\n        catch(e){\r\n            setClubs({\r\n                load:false,\r\n                list:[],\r\n                user:{}\r\n            });\r\n        }\r\n    },[id]);\r\n\r\n    const onChangeClub= (e)=>{\r\n        if(parseInt(e.target.value) === 0)\r\n            return;\r\n        setIdClub(e.target.value);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getListClubs();\r\n    },[getListClubs]);\r\n\r\n    useEffect(()=>{\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    },[]);\r\n\r\n    return{\r\n        clubs,\r\n        onChangeClub,\r\n        idClub,\r\n        setClubs\r\n    }\r\n}","import {useState,useCallback,useEffect} from 'react';\r\nimport { fetchCustome2 } from \"../../helpers/fetch\";\r\n\r\n\r\nexport const GetListTournamentHook = (id)=>{\r\n\r\n    const [data, setData] = useState({\r\n        load:true,\r\n        list:[]\r\n    });\r\n  \r\n    const getList = useCallback(async()=>{\r\n    \r\n        try{\r\n            let data = await fetchCustome2( { endpoint : `/tournaments/list/${id}`} );\r\n\r\n            console.log(data)\r\n            \r\n            setData({\r\n                load:false,\r\n                list:[\r\n                    {\r\n                        id:0,\r\n                        name:'Selecciona un torneo'\r\n                    },\r\n                    ...data\r\n                ]\r\n                   \r\n            });\r\n        }\r\n        catch(e){\r\n            setData({\r\n                load:false,\r\n                list:[]\r\n            });\r\n        }\r\n    },[id]);\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        if(id === 0)\r\n            return;\r\n\r\n        setData(data=>({\r\n            ...data,\r\n            load:true,\r\n        }));\r\n\r\n        getList();\r\n\r\n    },[getList]);\r\n\r\n    return{\r\n        listTournaments:data\r\n    }\r\n}","import { useContext , useEffect, useState ,useRef} from 'react';\nimport {customeContext} from '../../context/context';\nimport {ContextTournamentsVs} from '../../context/ContextTournamentsVs';\nimport {GetUserHook} from './GetUserHook';\nimport {GetListTournamentHook} from './GetListTournamentHook';\nimport {TableTimes} from './TableTimes';\nimport {TableTimes2} from './TableTimes2';\nimport {ButtonFloat} from '../utils/buttonFloat/ButtonFloatComponent';\nimport {waitSwal,closeSwal} from '../utils/swalCustome';\n\nimport {PerfilClubComponent} from '../perfil/PerfilClubComponent';\nimport {PerfilClubsHook} from '../perfil/PerfilClubsHook';\n\nconst TimeScreen = () => {\n\n    const {setContext} = useContext(customeContext);\n    const {userP} = useContext(ContextTournamentsVs);\n\n    //Obtenemos los clubs\n    const {clubs,onChangeClub,idClub} = PerfilClubsHook();\n\n    //Obtenemos los torneos\n    const {listTournaments} = GetListTournamentHook(idClub);\n\n    const [jornada,setJornada] = useState(0);\n    const [idTournament,setIdTournament] = useState(0);\n    const {data,onChangeDateSingle,onChangePoints, upPositionUser,downPositionUser } = GetUserHook(jornada,idTournament,idClub);\n    const [widthScreen,setWidthScreen] = useState(window.innerWidth);\n    const [showResumen,setShowResumen] = useState(true);\n\n    const onMounted = useRef(false);//SÃ³lo al cambiar el select del club activamos la ventana de espere\n\n    useEffect(() => {\n        setContext( context => (\n            {   ...context,\n                titlePage : 'Horarios'\n            })\n        );\n    },[setContext]);\n\n\n    //#region Controlamos la venta de espera cada que se cambia de club\n    //Cada que cambiamos el club y esperamos se cargen las listas de torneos\n    useEffect(() => {\n        if(onMounted.current)\n            waitSwal({html:'Cargando lista de torneos'});\n    },[idClub]);\n    //Cuando la lista de torneos se cargaron\n    useEffect(()=>{\n        if(onMounted.current)\n            closeSwal();\n        else\n            onMounted.current = true;\n       \n    },[listTournaments.load]);\n    \n    useEffect(()=>{\n        const onResize = ()=>setWidthScreen( window.innerWidth )\n        \n        window.addEventListener('resize',onResize);\n\n        return () => {\n            window.removeEventListener('resize',onResize);\n        }\n\n    },[]);\n\n    const onChangeJornada = (e)=>{\n        waitSwal({html:'Cargando jornada'});\n        setJornada(e.target.value);\n    }\n\n    const onChangeTournament = (e)=>{\n        if(parseInt(e.target.value) === 0)\n            return;\n        //cada que cambiamos de torneo\n        waitSwal({html:'Cargando torneo'});\n        setIdTournament(e.target.value);\n    }\n\n    return (\n        <div className=\"main-content\">\n            <div className=\"main-content-inner\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 mt-3\">\n                        <div className=\"card\">\n                            <div className =\"card-body\">\n\n                                <PerfilClubComponent clubs={clubs} onChangeClub={onChangeClub}/>\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-6 mt-5\" style={{position:\"relative\"}}>\n                                        <span style={{position:\"absolute\",top:-21,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Selecciona un torneo</span>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <select className=\"form-control text-uppercase\" onChange={onChangeTournament} disabled={listTournaments.load} value={idTournament}>\n                                                \n                                                {\n                                                    listTournaments.load ?\n\n                                                    <option value=\"0\">ESPERANDO...</option>:\n\n                                                    listTournaments.list.map(item=>(\n                                                        <option value={item.id} key={item.id} >{item.name}</option>\n                                                    ))\n                                                }\n                                               \n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-6 mt-5 mb-3 d-flex justify-content-end\">\n                                        <h5 className=\"mt-3\">Jornada </h5>\n                                        <input type=\"number\" className=\"form-control\" value={ data.journal_active } min=\"1\" max={data.last_journal_close} onChange={onChangeJornada} disabled={data.load} style={{width:80,fontSize:20,textAlign:'center',marginLeft:4,marginRight:4}}/>\n                                        <h5 className=\"mt-3\"> de {data.journals_total}</h5>\n                                    </div>\n                                </div>\n\n                                {\n                                    data.load ?\n\n                                    <></> :\n\n                                    widthScreen > 920 \n\n                                    ?\n                                \n                                        <TableTimes \n                                            courts={data.times[0]} \n                                            users={userP} \n                                            numberPlayers={data.number_players_by_court} \n                                            onChangeDateSingle={onChangeDateSingle} \n                                            onChangePoints={onChangePoints}\n                                            upPositionUser={upPositionUser}\n                                            downPositionUser={downPositionUser}\n                                            disabled={true}\n                                            setShowResumen={setShowResumen}\n                                            showResumen={showResumen}\n                                        />\n                                    \n                                    :\n\n                                        <div className=\"row\" style={{marginTop:40}}>\n                                            <TableTimes2 \n                                                courts={data.times[0]} \n                                                users={userP} \n                                                numberPlayers={data.number_players_by_court} \n                                                onChangeDateSingle={onChangeDateSingle} \n                                                onChangePoints={onChangePoints}\n                                                upPositionUser={upPositionUser}\n                                                downPositionUser={downPositionUser}\n                                                disabled={true}\n                                                setShowResumen={setShowResumen}\n                                                showResumen={showResumen}\n                                            />\n                                        </div>\n                                }\n\n                                <ButtonFloat hight={200}/>\n\n                            </div>\n                        </div>\n                    </div>\n                 </div>        \n            </div>\n        </div>\n    )\n}\n\nexport default TimeScreen;\n"],"names":["PerfilClubsHook","id","useState","load","list","list2","user","clubs","setClubs","idClub","setIdClub","isMounted","useRef","getListClubs","useCallback","fetchCustome2","endpoint","resp","current","console","log","name","img","number","email","clubs2","addChar","useEffect","onChangeClub","e","parseInt","target","value","GetListTournamentHook","data","setData","getList","listTournaments","setContext","useContext","customeContext","userP","ContextTournamentsVs","jornada","setJornada","idTournament","setIdTournament","GetUserHook","onChangeDateSingle","onChangePoints","upPositionUser","downPositionUser","window","innerWidth","widthScreen","setWidthScreen","showResumen","setShowResumen","onMounted","context","titlePage","waitSwal","html","closeSwal","onResize","addEventListener","removeEventListener","className","style","position","top","left","background","padding","color","onChange","disabled","map","item","type","journal_active","min","max","last_journal_close","width","fontSize","textAlign","marginLeft","marginRight","journals_total","courts","times","users","numberPlayers","number_players_by_court","marginTop","hight"],"sourceRoot":""}