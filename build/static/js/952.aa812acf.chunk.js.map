{"version":3,"file":"static/js/952.aa812acf.chunk.js","mappings":"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","sources":["componets/perfil/PerfilScreenAdmins.js"],"sourcesContent":["import {useContext , useEffect , useState, useRef} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Cropper from \"react-cropper\";\r\nimport { updateImg } from '../../actions';\r\nimport {GetListTournamentHook} from '../time/GetListTournamentHook';\r\nimport {customeContext} from '../../context/context';\r\nimport {GetListTableUserHook} from './GetListTableUserHook';\r\nimport {Load2} from '../utils/load2/Load2';\r\nimport {waitSwal,mixinSwal,infoSwal} from '../utils/swalCustome';\r\nimport {fetchCustome2} from \"../../helpers/fetch\";\r\nimport {PerfilData} from './PerfilData'\r\nimport {PerfilClubsGestionComponent} from './PerfilClubsGestionComponent';\r\nimport {ButtonFloat} from '../utils/buttonFloat/ButtonFloatComponent';\r\n  /*********************Controlamos la lista de clubs*********************/\r\nimport {PerfilClubComponent,PerfilClubComponentCarpet} from './PerfilClubComponent';\r\nimport {PerfilClubsHook} from './PerfilClubsHook';\r\n\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nconst PerfilScreen = ()=>{\r\n\r\n    const {image} = useSelector( store => store.auth );\r\n    const dispatch = useDispatch();\r\n    const { setContext } = useContext(customeContext);\r\n\r\n    /*********************Controlamos la lista de clubs*********************/\r\n    const {clubs,setClubs,onChangeClub,idClub} = PerfilClubsHook();\r\n\r\n\r\n /*********************Controlamos la lista torneos*********************/\r\n    const {listTournaments} = GetListTournamentHook(idClub);\r\n    \r\n\r\n\r\n    const [idTournament,setIdTournament] = useState(0);\r\n    const {data} = GetListTableUserHook(idTournament);\r\n\r\n\r\n    const [imageCropper, setImageCropper] = useState(image);\r\n    const cropperRef = useRef();\r\n    const inputFile = useRef(null);\r\n    const [toggleBtnSaveImg,setToggleBtnSaveImg] = useState(true);\r\n\r\n    const [modalGestionClubs,setModalGestionClubs] = useState(false);\r\n\r\n\r\n    const [formPass,setFormPass] = useState({\r\n        pass:\"\",\r\n        pass2:\"\"\r\n    });\r\n\r\n    const [input, setInput] = useState({\r\n        type:'password',\r\n        check:'fa-square color-disabled-check'\r\n    });\r\n\r\n    useEffect(() => {\r\n        setContext( context => (\r\n            {   ...context,\r\n                titlePage : 'Mis datos'\r\n            })\r\n        );\r\n    },[setContext]);\r\n\r\n    useEffect(() => {\r\n       \r\n    },[idClub]);\r\n\r\n\r\n    const changeType = (val)=>{\r\n        let [type,check] = ['password','fa-square color-disabled-check'];\r\n        \r\n        if(val === 'password'){\r\n            type = 'text';\r\n            check = 'fa-check-square color-enabled-check';\r\n        }\r\n\r\n        setInput({\r\n            type,\r\n            check\r\n        });\r\n    }\r\n\r\n    const onChangeTournament = (e)=>{\r\n        setIdTournament(e.target.value);\r\n    }\r\n\r\n    const onUpdatePass = async()=>{\r\n\r\n        const {pass,pass2} = formPass;\r\n\r\n        if(pass !== pass2){\r\n            return infoSwal({\r\n                icon: 'info',\r\n                title: 'Contraseñas incorrectas',\r\n                text: `La contraseña y la confirmación deben ser identicas` ,\r\n            });\r\n        }\r\n\r\n        if(!pass.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?_.])[A-Za-z\\d@$!%*?_.]{10,15}$/)){\r\n            return infoSwal({\r\n                icon: 'info',\r\n                title: 'Contraseña debil',\r\n                text: `La contraseña debe de tener mínimo 10 y máximo 15 caracteres; al menos 1 número,1 mínuscula, 1 máyuscula y alguno de los siguientes caracteres especiales @ $ ! % * ? . _` ,\r\n            });\r\n        }\r\n\r\n         waitSwal({html:'Actualizando contraseña'});\r\n            try{\r\n    \r\n                await fetchCustome2({ \r\n                    endpoint : '/perfil/passwd',\r\n                    method :'PATCH',\r\n                    body:{\r\n                        'passwd':pass\r\n                    },\r\n                    json:true\r\n                });\r\n    \r\n                setFormPass({\r\n                    pass:\"\",\r\n                    pass2:\"\"\r\n                })\r\n\r\n                mixinSwal({ icon: 'success',title: `La contraseña se actualizó correctamente`});\r\n    \r\n            }\r\n            catch(e){\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n                });\r\n            }\r\n\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        let file = e.target.files[0];\r\n        if (/\\.(?=jpg|jpeg)/gi.test(file.name.toLowerCase())) {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                setToggleBtnSaveImg(false);\r\n                setImageCropper(reader.result);\r\n                inputFile.current.value = \"\";\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n        else{\r\n            return infoSwal({\r\n                icon: 'info',\r\n                title: 'Formato de imagen inválido',\r\n                text: `Sólo se permiten imagenes jpg o jpeg` ,\r\n            });\r\n        }\r\n    };\r\n      \r\n    const clickInputFile = ()=>{\r\n        inputFile.current.click()\r\n    }\r\n    \r\n    const getCropData = async() => {\r\n\r\n        if (typeof cropperRef.current !== \"undefined\") {\r\n            const newImage = cropperRef.current.cropper.getCroppedCanvas({\r\n                width: 512,//podemos establecer un tamaño fijo en la imagen final en este caso manejamos la relación 16 / 9\r\n                height: 512,\r\n                fillColor: '#fff'\r\n            })\r\n            .toDataURL(\"image/jpeg\",0.7);//bajamos la calidad para disminuir considerablemente el peso sin afectar la calidad\r\n\r\n            const blob = await fetch(newImage).then(temp => temp.blob());//con la imagen resultante creamos un blob\r\n            const temp = new File([blob], \"temporal.jpg\", {type: blob.type});//hecho el blob creamos el archivo\r\n\r\n\r\n            const form = new FormData();\r\n            form.append(\"img\",temp);\r\n            form.append(\"_method\",'patch');\r\n\r\n\r\n            waitSwal({html:'Actualizando imagen'});\r\n\r\n            try{\r\n    \r\n                const resp = await fetchCustome2({ \r\n                    endpoint : '/perfil/avatar',\r\n                    method :'POST',\r\n                    body:form\r\n                });\r\n    \r\n               if(resp !== \"\"){\r\n                   mixinSwal({ icon: 'success',title: `La imagen se actualizó correctamente`});\r\n                   setToggleBtnSaveImg(true);\r\n                   setImageCropper(resp);\r\n                   dispatch(updateImg(resp));\r\n               }\r\n               else{\r\n                    infoSwal({\r\n                        icon: 'error',\r\n                        title: 'Ocurrio un error',\r\n                        text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n                    });\r\n               }\r\n    \r\n            }\r\n            catch(e){\r\n                infoSwal({\r\n                    icon: 'error',\r\n                    title: 'Ocurrio un error',\r\n                    text: `Error de comunucación con el servidor, intentelo más tarde` ,\r\n                });\r\n            }\r\n            \r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"main-content\">\r\n\r\n            <div className=\"main-content-inner\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                        <div className=\"card\">\r\n                            <div className =\"card-body\">\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-md-12 col-xs-12 mt-1 mb-5 text-center\">\r\n                                        <h5>Actualiza tus datos</h5>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        clubs.load \r\n                                        ?\r\n                                        <Load2 />\r\n                                        :\r\n                                        <PerfilData {...clubs.user}/>\r\n\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"main-content-inner\">\r\n                <div className=\"row\">\r\n            \r\n                    <div className=\"col-md-6 col-sm-12\">\r\n                        <div className=\"card\">\r\n                            <div className =\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 col-xs-12 mt-1 mb-3 text-center\">\r\n                                        <h5>Actualiza tu imagen</h5>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-xs-12 mt-2 d-flex justify-content-center\">\r\n                                       <div className=\"position-relative\" style={{width:220,border:'2px dashed',padding:8,cursor:'pointer'}}>\r\n                                            <Cropper\r\n                                                ref={cropperRef}\r\n                                                src={imageCropper}\r\n                                                style={{ maxHeight: 200,width: 200}}\r\n                                                initialAspectRatio={1}\r\n                                                cropBoxResizable={false}\r\n                                                dragMode = 'move'\r\n                                                guides={false}\r\n                                                viewMode={1}\r\n                                                zoomTo={0.2}\r\n                                                //zoomOnWheel={!toggleBtnSaveImg}\r\n                                                // checkCrossOrigin={false}\r\n                                                // checkOrientation={false}\r\n                                            />\r\n                                            <i className=\"fa fa-2x fa-picture-o position-absolute\" onClick={clickInputFile} style={{top:-20,right:-15,color:'#fff',background:'rgb(9, 139, 206)',padding:12,borderRadius:50}} aria-hidden=\"true\"></i>\r\n                                            <input ref={inputFile} type=\"file\" onChange={onChange} style={{display:'none'}}/>\r\n                                       </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 mt-4 mb-2 d-flex justify-content-center\">\r\n                                        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={getCropData} disabled={toggleBtnSaveImg} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}}> Actualizar</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 col-sm-12\">\r\n                        <div className=\"card\">\r\n                            <div className =\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 col-xs-12 mt-1 mb-5 text-center\">\r\n                                        <h5>Actualiza tu contraseña</h5>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-xs-12 mt-3 text-center\">\r\n                                        <div style={{position:\"relative\"}}>\r\n                                            <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Nueva contraseña</span>\r\n                                            <input \r\n                                                type={input.type} \r\n                                                className=\"form-control\" \r\n                                                onChange={(e)=>setFormPass(value=>({\r\n                                                    ...value,\r\n                                                    pass:e.target.value.trim()\r\n                                                }))} \r\n                                                value={formPass.pass}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-xs-12 mt-3 text-center\">\r\n                                        <div style={{position:\"relative\"}}>\r\n                                            <span style={{position:\"absolute\",top:-12,left:25,background:\"#fff\",padding: \"0 10px\",color:\"#ccc\"}}>Repite la nueva contraseña</span>\r\n                                            <input  \r\n                                                type={input.type} \r\n                                                className=\"form-control\" \r\n                                                onChange={(e)=>setFormPass(value=>({\r\n                                                    ...value,\r\n                                                    pass2:e.target.value.trim()\r\n                                                }))} \r\n                                                value={formPass.pass2}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 mt-4 mb-2\">\r\n                                        <div style={{position:'absolute',cursor:'pointer',zIndex:3}} onClick={()=>changeType(input.type)}>\r\n                                            <i className={`fa ${input.check} fa-2x me-1`} style={{cursor:'pointer'}}></i>\r\n                                            <label className=\"custom-control-label ml-3\" style={{cursor:'pointer'}}>Mostrar</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 mt-2 mb-5 d-flex justify-content-end\">\r\n                                        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={onUpdatePass} style={{boxShadow: \"-3px 3px 15px -2px rgba(0,0,0,0.22)\"}}> Actualizar</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n             <ButtonFloat hight={200}/>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PerfilScreen;"],"names":["image","useSelector","store","auth","dispatch","useDispatch","setContext","useContext","customeContext","PerfilClubsHook","clubs","idClub","setClubs","onChangeClub","GetListTournamentHook","listTournaments","useState","idTournament","GetListTableUserHook","data","imageCropper","setImageCropper","cropperRef","useRef","inputFile","toggleBtnSaveImg","setToggleBtnSaveImg","pass","pass2","formPass","setFormPass","type","check","input","setInput","useEffect","context","titlePage","onUpdatePass","infoSwal","icon","title","text","match","waitSwal","html","fetchCustome2","endpoint","method","body","json","mixinSwal","getCropData","current","newImage","cropper","getCroppedCanvas","width","height","fillColor","toDataURL","fetch","then","temp","blob","File","form","FormData","append","resp","updateImg","className","load","user","style","border","padding","cursor","ref","src","maxHeight","initialAspectRatio","cropBoxResizable","dragMode","guides","viewMode","zoomTo","onClick","click","top","right","color","background","borderRadius","onChange","e","preventDefault","file","target","files","test","name","toLowerCase","reader","FileReader","onload","result","value","readAsDataURL","display","disabled","boxShadow","position","left","trim","zIndex","val","changeType","hight"],"sourceRoot":""}